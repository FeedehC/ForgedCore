// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ClientPerformance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Blizzard.Telemetry.Wow.Client {

  /// <summary>Holder for reflection information generated from ClientPerformance.proto</summary>
  public static partial class ClientPerformanceReflection {

    #region Descriptor
    /// <summary>File descriptor for ClientPerformance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientPerformanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdDbGllbnRQZXJmb3JtYW5jZS5wcm90bxIdQmxpenphcmQuVGVsZW1ldHJ5",
            "Lldvdy5DbGllbnQaGnRlbGVtZXRyeV9leHRlbnNpb25zLnByb3RvGiJUZWxl",
            "bWV0cnlTaGFyZWRDbGllbnRJbXBvcnRzLnByb3RvGh1DbGllbnRQZXJmb3Jt",
            "YW5jZVNoYXJlZC5wcm90bxoSQ2xpZW50U2hhcmVkLnByb3RvIoUDChZDbGll",
            "bnRQZXJmb3JtYW5jZVN0YXRzEhEKCWF2ZV9mcmFtZRgBIAEoAhIbChNhdmVf",
            "Y3B1X3VwZGF0ZV90aW1lGAIgASgCEhsKE2F2ZV9jcHVfcmVuZGVyX3RpbWUY",
            "AyABKAISGQoRYXZlX2dwdV93YWl0X3RpbWUYBCABKAISGwoTYXZlX2dwdV9y",
            "ZW5kZXJfdGltZRgFIAEoAhIdChVhdmVfZ3B1X2ZyYW1lX2xhdGVuY3kYBiAB",
            "KAISIQoZYXZlX2xvd19sYXRlbmN5X3dhaXRfdGltZRgHIAEoAhIkChxhdmVf",
            "bnVtX2dwdV9mcmFtZXNfaW5fZmxpZ2h0GAggASgCEhEKCWdwdV9ib3VuZBgJ",
            "IAEoCBIZChF0YXJnZXRfZnJhbWVfdGltZRgKIAEoAhIcChRjdXJyZW50X3Jl",
            "bmRlcl9zY2FsZRgLIAEoAhIYChBtaW5fcmVuZGVyX3NjYWxlGAwgASgCEhgK",
            "EG1heF9yZW5kZXJfc2NhbGUYDSABKAIilQIKEUNsaWVudFBlcmZvcm1hbmNl",
            "EjkKBmNsaWVudBgBIAEoCzIpLkJsaXp6YXJkLlRlbGVtZXRyeS5Xb3cuQ2xp",
            "ZW50LkNsaWVudEluZm8SNwoFd29ybGQYAiABKAsyKC5CbGl6emFyZC5UZWxl",
            "bWV0cnkuV293LkNsaWVudC5Xb3JsZEluZm8SRAoFc3RhdHMYAyABKAsyNS5C",
            "bGl6emFyZC5UZWxlbWV0cnkuV293LkNsaWVudC5DbGllbnRQZXJmb3JtYW5j",
            "ZVN0YXRzEj0KBHNwZWMYBCABKAsyLy5CbGl6emFyZC5UZWxlbWV0cnkuV293",
            "LkNsaWVudC5DbGllbnRTeXN0ZW1TcGVjOgfCzCUDoAYB"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Blizzard.Telemetry.TelemetryExtensionsReflection.Descriptor, global::Blizzard.Telemetry.Wow.Client.TelemetrySharedClientImportsReflection.Descriptor, global::Blizzard.Telemetry.Wow.Client.ClientPerformanceSharedReflection.Descriptor, global::Blizzard.Telemetry.Wow.Client.ClientSharedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats), global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats.Parser, new[]{ "AveFrame", "AveCpuUpdateTime", "AveCpuRenderTime", "AveGpuWaitTime", "AveGpuRenderTime", "AveGpuFrameLatency", "AveLowLatencyWaitTime", "AveNumGpuFramesInFlight", "GpuBound", "TargetFrameTime", "CurrentRenderScale", "MinRenderScale", "MaxRenderScale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Client.ClientPerformance), global::Blizzard.Telemetry.Wow.Client.ClientPerformance.Parser, new[]{ "Client", "World", "Stats", "Spec" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientPerformanceStats : pb::IMessage<ClientPerformanceStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientPerformanceStats> _parser = new pb::MessageParser<ClientPerformanceStats>(() => new ClientPerformanceStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientPerformanceStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.Client.ClientPerformanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientPerformanceStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientPerformanceStats(ClientPerformanceStats other) : this() {
      _hasBits0 = other._hasBits0;
      aveFrame_ = other.aveFrame_;
      aveCpuUpdateTime_ = other.aveCpuUpdateTime_;
      aveCpuRenderTime_ = other.aveCpuRenderTime_;
      aveGpuWaitTime_ = other.aveGpuWaitTime_;
      aveGpuRenderTime_ = other.aveGpuRenderTime_;
      aveGpuFrameLatency_ = other.aveGpuFrameLatency_;
      aveLowLatencyWaitTime_ = other.aveLowLatencyWaitTime_;
      aveNumGpuFramesInFlight_ = other.aveNumGpuFramesInFlight_;
      gpuBound_ = other.gpuBound_;
      targetFrameTime_ = other.targetFrameTime_;
      currentRenderScale_ = other.currentRenderScale_;
      minRenderScale_ = other.minRenderScale_;
      maxRenderScale_ = other.maxRenderScale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientPerformanceStats Clone() {
      return new ClientPerformanceStats(this);
    }

    /// <summary>Field number for the "ave_frame" field.</summary>
    public const int AveFrameFieldNumber = 1;
    private readonly static float AveFrameDefaultValue = 0F;

    private float aveFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveFrame {
      get { if ((_hasBits0 & 1) != 0) { return aveFrame_; } else { return AveFrameDefaultValue; } }
      set {
        _hasBits0 |= 1;
        aveFrame_ = value;
      }
    }
    /// <summary>Gets whether the "ave_frame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveFrame {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ave_frame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveFrame() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ave_cpu_update_time" field.</summary>
    public const int AveCpuUpdateTimeFieldNumber = 2;
    private readonly static float AveCpuUpdateTimeDefaultValue = 0F;

    private float aveCpuUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveCpuUpdateTime {
      get { if ((_hasBits0 & 2) != 0) { return aveCpuUpdateTime_; } else { return AveCpuUpdateTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        aveCpuUpdateTime_ = value;
      }
    }
    /// <summary>Gets whether the "ave_cpu_update_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveCpuUpdateTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "ave_cpu_update_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveCpuUpdateTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ave_cpu_render_time" field.</summary>
    public const int AveCpuRenderTimeFieldNumber = 3;
    private readonly static float AveCpuRenderTimeDefaultValue = 0F;

    private float aveCpuRenderTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveCpuRenderTime {
      get { if ((_hasBits0 & 4) != 0) { return aveCpuRenderTime_; } else { return AveCpuRenderTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        aveCpuRenderTime_ = value;
      }
    }
    /// <summary>Gets whether the "ave_cpu_render_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveCpuRenderTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ave_cpu_render_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveCpuRenderTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "ave_gpu_wait_time" field.</summary>
    public const int AveGpuWaitTimeFieldNumber = 4;
    private readonly static float AveGpuWaitTimeDefaultValue = 0F;

    private float aveGpuWaitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveGpuWaitTime {
      get { if ((_hasBits0 & 8) != 0) { return aveGpuWaitTime_; } else { return AveGpuWaitTimeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        aveGpuWaitTime_ = value;
      }
    }
    /// <summary>Gets whether the "ave_gpu_wait_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveGpuWaitTime {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "ave_gpu_wait_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveGpuWaitTime() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "ave_gpu_render_time" field.</summary>
    public const int AveGpuRenderTimeFieldNumber = 5;
    private readonly static float AveGpuRenderTimeDefaultValue = 0F;

    private float aveGpuRenderTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveGpuRenderTime {
      get { if ((_hasBits0 & 16) != 0) { return aveGpuRenderTime_; } else { return AveGpuRenderTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        aveGpuRenderTime_ = value;
      }
    }
    /// <summary>Gets whether the "ave_gpu_render_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveGpuRenderTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "ave_gpu_render_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveGpuRenderTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ave_gpu_frame_latency" field.</summary>
    public const int AveGpuFrameLatencyFieldNumber = 6;
    private readonly static float AveGpuFrameLatencyDefaultValue = 0F;

    private float aveGpuFrameLatency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveGpuFrameLatency {
      get { if ((_hasBits0 & 32) != 0) { return aveGpuFrameLatency_; } else { return AveGpuFrameLatencyDefaultValue; } }
      set {
        _hasBits0 |= 32;
        aveGpuFrameLatency_ = value;
      }
    }
    /// <summary>Gets whether the "ave_gpu_frame_latency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveGpuFrameLatency {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ave_gpu_frame_latency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveGpuFrameLatency() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "ave_low_latency_wait_time" field.</summary>
    public const int AveLowLatencyWaitTimeFieldNumber = 7;
    private readonly static float AveLowLatencyWaitTimeDefaultValue = 0F;

    private float aveLowLatencyWaitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveLowLatencyWaitTime {
      get { if ((_hasBits0 & 64) != 0) { return aveLowLatencyWaitTime_; } else { return AveLowLatencyWaitTimeDefaultValue; } }
      set {
        _hasBits0 |= 64;
        aveLowLatencyWaitTime_ = value;
      }
    }
    /// <summary>Gets whether the "ave_low_latency_wait_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveLowLatencyWaitTime {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "ave_low_latency_wait_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveLowLatencyWaitTime() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "ave_num_gpu_frames_in_flight" field.</summary>
    public const int AveNumGpuFramesInFlightFieldNumber = 8;
    private readonly static float AveNumGpuFramesInFlightDefaultValue = 0F;

    private float aveNumGpuFramesInFlight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AveNumGpuFramesInFlight {
      get { if ((_hasBits0 & 128) != 0) { return aveNumGpuFramesInFlight_; } else { return AveNumGpuFramesInFlightDefaultValue; } }
      set {
        _hasBits0 |= 128;
        aveNumGpuFramesInFlight_ = value;
      }
    }
    /// <summary>Gets whether the "ave_num_gpu_frames_in_flight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAveNumGpuFramesInFlight {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "ave_num_gpu_frames_in_flight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAveNumGpuFramesInFlight() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "gpu_bound" field.</summary>
    public const int GpuBoundFieldNumber = 9;
    private readonly static bool GpuBoundDefaultValue = false;

    private bool gpuBound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GpuBound {
      get { if ((_hasBits0 & 256) != 0) { return gpuBound_; } else { return GpuBoundDefaultValue; } }
      set {
        _hasBits0 |= 256;
        gpuBound_ = value;
      }
    }
    /// <summary>Gets whether the "gpu_bound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGpuBound {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "gpu_bound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGpuBound() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "target_frame_time" field.</summary>
    public const int TargetFrameTimeFieldNumber = 10;
    private readonly static float TargetFrameTimeDefaultValue = 0F;

    private float targetFrameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TargetFrameTime {
      get { if ((_hasBits0 & 512) != 0) { return targetFrameTime_; } else { return TargetFrameTimeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        targetFrameTime_ = value;
      }
    }
    /// <summary>Gets whether the "target_frame_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetFrameTime {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "target_frame_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetFrameTime() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "current_render_scale" field.</summary>
    public const int CurrentRenderScaleFieldNumber = 11;
    private readonly static float CurrentRenderScaleDefaultValue = 0F;

    private float currentRenderScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CurrentRenderScale {
      get { if ((_hasBits0 & 1024) != 0) { return currentRenderScale_; } else { return CurrentRenderScaleDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        currentRenderScale_ = value;
      }
    }
    /// <summary>Gets whether the "current_render_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentRenderScale {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "current_render_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentRenderScale() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "min_render_scale" field.</summary>
    public const int MinRenderScaleFieldNumber = 12;
    private readonly static float MinRenderScaleDefaultValue = 0F;

    private float minRenderScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinRenderScale {
      get { if ((_hasBits0 & 2048) != 0) { return minRenderScale_; } else { return MinRenderScaleDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        minRenderScale_ = value;
      }
    }
    /// <summary>Gets whether the "min_render_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinRenderScale {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "min_render_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinRenderScale() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "max_render_scale" field.</summary>
    public const int MaxRenderScaleFieldNumber = 13;
    private readonly static float MaxRenderScaleDefaultValue = 0F;

    private float maxRenderScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxRenderScale {
      get { if ((_hasBits0 & 4096) != 0) { return maxRenderScale_; } else { return MaxRenderScaleDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        maxRenderScale_ = value;
      }
    }
    /// <summary>Gets whether the "max_render_scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxRenderScale {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "max_render_scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxRenderScale() {
      _hasBits0 &= ~4096;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientPerformanceStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientPerformanceStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveFrame, other.AveFrame)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveCpuUpdateTime, other.AveCpuUpdateTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveCpuRenderTime, other.AveCpuRenderTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveGpuWaitTime, other.AveGpuWaitTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveGpuRenderTime, other.AveGpuRenderTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveGpuFrameLatency, other.AveGpuFrameLatency)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveLowLatencyWaitTime, other.AveLowLatencyWaitTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AveNumGpuFramesInFlight, other.AveNumGpuFramesInFlight)) return false;
      if (GpuBound != other.GpuBound) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TargetFrameTime, other.TargetFrameTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentRenderScale, other.CurrentRenderScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinRenderScale, other.MinRenderScale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxRenderScale, other.MaxRenderScale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAveFrame) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveFrame);
      if (HasAveCpuUpdateTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveCpuUpdateTime);
      if (HasAveCpuRenderTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveCpuRenderTime);
      if (HasAveGpuWaitTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveGpuWaitTime);
      if (HasAveGpuRenderTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveGpuRenderTime);
      if (HasAveGpuFrameLatency) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveGpuFrameLatency);
      if (HasAveLowLatencyWaitTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveLowLatencyWaitTime);
      if (HasAveNumGpuFramesInFlight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AveNumGpuFramesInFlight);
      if (HasGpuBound) hash ^= GpuBound.GetHashCode();
      if (HasTargetFrameTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TargetFrameTime);
      if (HasCurrentRenderScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentRenderScale);
      if (HasMinRenderScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinRenderScale);
      if (HasMaxRenderScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxRenderScale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAveFrame) {
        output.WriteRawTag(13);
        output.WriteFloat(AveFrame);
      }
      if (HasAveCpuUpdateTime) {
        output.WriteRawTag(21);
        output.WriteFloat(AveCpuUpdateTime);
      }
      if (HasAveCpuRenderTime) {
        output.WriteRawTag(29);
        output.WriteFloat(AveCpuRenderTime);
      }
      if (HasAveGpuWaitTime) {
        output.WriteRawTag(37);
        output.WriteFloat(AveGpuWaitTime);
      }
      if (HasAveGpuRenderTime) {
        output.WriteRawTag(45);
        output.WriteFloat(AveGpuRenderTime);
      }
      if (HasAveGpuFrameLatency) {
        output.WriteRawTag(53);
        output.WriteFloat(AveGpuFrameLatency);
      }
      if (HasAveLowLatencyWaitTime) {
        output.WriteRawTag(61);
        output.WriteFloat(AveLowLatencyWaitTime);
      }
      if (HasAveNumGpuFramesInFlight) {
        output.WriteRawTag(69);
        output.WriteFloat(AveNumGpuFramesInFlight);
      }
      if (HasGpuBound) {
        output.WriteRawTag(72);
        output.WriteBool(GpuBound);
      }
      if (HasTargetFrameTime) {
        output.WriteRawTag(85);
        output.WriteFloat(TargetFrameTime);
      }
      if (HasCurrentRenderScale) {
        output.WriteRawTag(93);
        output.WriteFloat(CurrentRenderScale);
      }
      if (HasMinRenderScale) {
        output.WriteRawTag(101);
        output.WriteFloat(MinRenderScale);
      }
      if (HasMaxRenderScale) {
        output.WriteRawTag(109);
        output.WriteFloat(MaxRenderScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAveFrame) {
        output.WriteRawTag(13);
        output.WriteFloat(AveFrame);
      }
      if (HasAveCpuUpdateTime) {
        output.WriteRawTag(21);
        output.WriteFloat(AveCpuUpdateTime);
      }
      if (HasAveCpuRenderTime) {
        output.WriteRawTag(29);
        output.WriteFloat(AveCpuRenderTime);
      }
      if (HasAveGpuWaitTime) {
        output.WriteRawTag(37);
        output.WriteFloat(AveGpuWaitTime);
      }
      if (HasAveGpuRenderTime) {
        output.WriteRawTag(45);
        output.WriteFloat(AveGpuRenderTime);
      }
      if (HasAveGpuFrameLatency) {
        output.WriteRawTag(53);
        output.WriteFloat(AveGpuFrameLatency);
      }
      if (HasAveLowLatencyWaitTime) {
        output.WriteRawTag(61);
        output.WriteFloat(AveLowLatencyWaitTime);
      }
      if (HasAveNumGpuFramesInFlight) {
        output.WriteRawTag(69);
        output.WriteFloat(AveNumGpuFramesInFlight);
      }
      if (HasGpuBound) {
        output.WriteRawTag(72);
        output.WriteBool(GpuBound);
      }
      if (HasTargetFrameTime) {
        output.WriteRawTag(85);
        output.WriteFloat(TargetFrameTime);
      }
      if (HasCurrentRenderScale) {
        output.WriteRawTag(93);
        output.WriteFloat(CurrentRenderScale);
      }
      if (HasMinRenderScale) {
        output.WriteRawTag(101);
        output.WriteFloat(MinRenderScale);
      }
      if (HasMaxRenderScale) {
        output.WriteRawTag(109);
        output.WriteFloat(MaxRenderScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAveFrame) {
        size += 1 + 4;
      }
      if (HasAveCpuUpdateTime) {
        size += 1 + 4;
      }
      if (HasAveCpuRenderTime) {
        size += 1 + 4;
      }
      if (HasAveGpuWaitTime) {
        size += 1 + 4;
      }
      if (HasAveGpuRenderTime) {
        size += 1 + 4;
      }
      if (HasAveGpuFrameLatency) {
        size += 1 + 4;
      }
      if (HasAveLowLatencyWaitTime) {
        size += 1 + 4;
      }
      if (HasAveNumGpuFramesInFlight) {
        size += 1 + 4;
      }
      if (HasGpuBound) {
        size += 1 + 1;
      }
      if (HasTargetFrameTime) {
        size += 1 + 4;
      }
      if (HasCurrentRenderScale) {
        size += 1 + 4;
      }
      if (HasMinRenderScale) {
        size += 1 + 4;
      }
      if (HasMaxRenderScale) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientPerformanceStats other) {
      if (other == null) {
        return;
      }
      if (other.HasAveFrame) {
        AveFrame = other.AveFrame;
      }
      if (other.HasAveCpuUpdateTime) {
        AveCpuUpdateTime = other.AveCpuUpdateTime;
      }
      if (other.HasAveCpuRenderTime) {
        AveCpuRenderTime = other.AveCpuRenderTime;
      }
      if (other.HasAveGpuWaitTime) {
        AveGpuWaitTime = other.AveGpuWaitTime;
      }
      if (other.HasAveGpuRenderTime) {
        AveGpuRenderTime = other.AveGpuRenderTime;
      }
      if (other.HasAveGpuFrameLatency) {
        AveGpuFrameLatency = other.AveGpuFrameLatency;
      }
      if (other.HasAveLowLatencyWaitTime) {
        AveLowLatencyWaitTime = other.AveLowLatencyWaitTime;
      }
      if (other.HasAveNumGpuFramesInFlight) {
        AveNumGpuFramesInFlight = other.AveNumGpuFramesInFlight;
      }
      if (other.HasGpuBound) {
        GpuBound = other.GpuBound;
      }
      if (other.HasTargetFrameTime) {
        TargetFrameTime = other.TargetFrameTime;
      }
      if (other.HasCurrentRenderScale) {
        CurrentRenderScale = other.CurrentRenderScale;
      }
      if (other.HasMinRenderScale) {
        MinRenderScale = other.MinRenderScale;
      }
      if (other.HasMaxRenderScale) {
        MaxRenderScale = other.MaxRenderScale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AveFrame = input.ReadFloat();
            break;
          }
          case 21: {
            AveCpuUpdateTime = input.ReadFloat();
            break;
          }
          case 29: {
            AveCpuRenderTime = input.ReadFloat();
            break;
          }
          case 37: {
            AveGpuWaitTime = input.ReadFloat();
            break;
          }
          case 45: {
            AveGpuRenderTime = input.ReadFloat();
            break;
          }
          case 53: {
            AveGpuFrameLatency = input.ReadFloat();
            break;
          }
          case 61: {
            AveLowLatencyWaitTime = input.ReadFloat();
            break;
          }
          case 69: {
            AveNumGpuFramesInFlight = input.ReadFloat();
            break;
          }
          case 72: {
            GpuBound = input.ReadBool();
            break;
          }
          case 85: {
            TargetFrameTime = input.ReadFloat();
            break;
          }
          case 93: {
            CurrentRenderScale = input.ReadFloat();
            break;
          }
          case 101: {
            MinRenderScale = input.ReadFloat();
            break;
          }
          case 109: {
            MaxRenderScale = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AveFrame = input.ReadFloat();
            break;
          }
          case 21: {
            AveCpuUpdateTime = input.ReadFloat();
            break;
          }
          case 29: {
            AveCpuRenderTime = input.ReadFloat();
            break;
          }
          case 37: {
            AveGpuWaitTime = input.ReadFloat();
            break;
          }
          case 45: {
            AveGpuRenderTime = input.ReadFloat();
            break;
          }
          case 53: {
            AveGpuFrameLatency = input.ReadFloat();
            break;
          }
          case 61: {
            AveLowLatencyWaitTime = input.ReadFloat();
            break;
          }
          case 69: {
            AveNumGpuFramesInFlight = input.ReadFloat();
            break;
          }
          case 72: {
            GpuBound = input.ReadBool();
            break;
          }
          case 85: {
            TargetFrameTime = input.ReadFloat();
            break;
          }
          case 93: {
            CurrentRenderScale = input.ReadFloat();
            break;
          }
          case 101: {
            MinRenderScale = input.ReadFloat();
            break;
          }
          case 109: {
            MaxRenderScale = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientPerformance : pb::IMessage<ClientPerformance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientPerformance> _parser = new pb::MessageParser<ClientPerformance>(() => new ClientPerformance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientPerformance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.Client.ClientPerformanceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientPerformance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientPerformance(ClientPerformance other) : this() {
      client_ = other.client_ != null ? other.client_.Clone() : null;
      world_ = other.world_ != null ? other.world_.Clone() : null;
      stats_ = other.stats_ != null ? other.stats_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientPerformance Clone() {
      return new ClientPerformance(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::Blizzard.Telemetry.Wow.Client.ClientInfo client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.ClientInfo Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    /// <summary>Field number for the "world" field.</summary>
    public const int WorldFieldNumber = 2;
    private global::Blizzard.Telemetry.Wow.Client.WorldInfo world_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.WorldInfo World {
      get { return world_; }
      set {
        world_ = value;
      }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 3;
    private global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats stats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats Stats {
      get { return stats_; }
      set {
        stats_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 4;
    private global::Blizzard.Telemetry.Wow.Client.ClientSystemSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.ClientSystemSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientPerformance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientPerformance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(World, other.World)) return false;
      if (!object.Equals(Stats, other.Stats)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      if (world_ != null) hash ^= World.GetHashCode();
      if (stats_ != null) hash ^= Stats.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      if (stats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Stats);
      }
      if (spec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      if (stats_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Stats);
      }
      if (spec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Spec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (world_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(World);
      }
      if (stats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientPerformance other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
        }
        Client.MergeFrom(other.Client);
      }
      if (other.world_ != null) {
        if (world_ == null) {
          World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
        }
        World.MergeFrom(other.World);
      }
      if (other.stats_ != null) {
        if (stats_ == null) {
          Stats = new global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats();
        }
        Stats.MergeFrom(other.Stats);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Blizzard.Telemetry.Wow.Client.ClientSystemSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
            }
            input.ReadMessage(World);
            break;
          }
          case 26: {
            if (stats_ == null) {
              Stats = new global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 34: {
            if (spec_ == null) {
              Spec = new global::Blizzard.Telemetry.Wow.Client.ClientSystemSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
            }
            input.ReadMessage(World);
            break;
          }
          case 26: {
            if (stats_ == null) {
              Stats = new global::Blizzard.Telemetry.Wow.Client.ClientPerformanceStats();
            }
            input.ReadMessage(Stats);
            break;
          }
          case 34: {
            if (spec_ == null) {
              Spec = new global::Blizzard.Telemetry.Wow.Client.ClientSystemSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
