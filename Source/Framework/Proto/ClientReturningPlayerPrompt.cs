// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ClientReturningPlayerPrompt.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Blizzard.Telemetry.Wow.Client {

  /// <summary>Holder for reflection information generated from ClientReturningPlayerPrompt.proto</summary>
  public static partial class ClientReturningPlayerPromptReflection {

    #region Descriptor
    /// <summary>File descriptor for ClientReturningPlayerPrompt.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientReturningPlayerPromptReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFDbGllbnRSZXR1cm5pbmdQbGF5ZXJQcm9tcHQucHJvdG8SHUJsaXp6YXJk",
            "LlRlbGVtZXRyeS5Xb3cuQ2xpZW50Ghp0ZWxlbWV0cnlfZXh0ZW5zaW9ucy5w",
            "cm90bxoiVGVsZW1ldHJ5U2hhcmVkQ2xpZW50SW1wb3J0cy5wcm90byLXAgob",
            "Q2xpZW50UmV0dXJuaW5nUGxheWVyUHJvbXB0EjkKBmNsaWVudBgBIAEoCzIp",
            "LkJsaXp6YXJkLlRlbGVtZXRyeS5Xb3cuQ2xpZW50LkNsaWVudEluZm8SNwoF",
            "d29ybGQYAiABKAsyKC5CbGl6emFyZC5UZWxlbWV0cnkuV293LkNsaWVudC5X",
            "b3JsZEluZm8SDQoFbGV2ZWwYAyABKAUSDQoFcG9zX3gYBCABKAISDQoFcG9z",
            "X3kYBSABKAISDQoFcG9zX3oYBiABKAISFwoPY2hyb21pZV90aW1lX2lkGAcg",
            "ASgFEhsKE251bV90b3RhbF9iYWdfc2xvdHMYCCABKA0SGwoTbnVtX2VtcHR5",
            "X2JhZ19zbG90cxgJIAEoBRIVCg1xdWVzdF9sb2dfaWRzGAogAygFEhUKDWN1",
            "cnJlbnRfbW9uZXkYCyABKAQ6B8LMJQOgBgAi8QIKI0NsaWVudFJldHVybmlu",
            "Z1BsYXllclByb21wdFJlc3BvbnNlEjkKBmNsaWVudBgBIAEoCzIpLkJsaXp6",
            "YXJkLlRlbGVtZXRyeS5Xb3cuQ2xpZW50LkNsaWVudEluZm8SNwoFd29ybGQY",
            "AiABKAsyKC5CbGl6emFyZC5UZWxlbWV0cnkuV293LkNsaWVudC5Xb3JsZElu",
            "Zm8SDQoFbGV2ZWwYAyABKAUSDQoFcG9zX3gYBCABKAISDQoFcG9zX3kYBSAB",
            "KAISDQoFcG9zX3oYBiABKAISFwoPY2hyb21pZV90aW1lX2lkGAcgASgFEhsK",
            "E251bV90b3RhbF9iYWdfc2xvdHMYCCABKA0SGwoTbnVtX2VtcHR5X2JhZ19z",
            "bG90cxgJIAEoBRIVCg1xdWVzdF9sb2dfaWRzGAogAygFEhUKDWN1cnJlbnRf",
            "bW9uZXkYCyABKAQSEAoIYWNjZXB0ZWQYDCABKAg6B8LMJQOgBgA="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Blizzard.Telemetry.TelemetryExtensionsReflection.Descriptor, global::Blizzard.Telemetry.Wow.Client.TelemetrySharedClientImportsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Client.ClientReturningPlayerPrompt), global::Blizzard.Telemetry.Wow.Client.ClientReturningPlayerPrompt.Parser, new[]{ "Client", "World", "Level", "PosX", "PosY", "PosZ", "ChromieTimeId", "NumTotalBagSlots", "NumEmptyBagSlots", "QuestLogIds", "CurrentMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Client.ClientReturningPlayerPromptResponse), global::Blizzard.Telemetry.Wow.Client.ClientReturningPlayerPromptResponse.Parser, new[]{ "Client", "World", "Level", "PosX", "PosY", "PosZ", "ChromieTimeId", "NumTotalBagSlots", "NumEmptyBagSlots", "QuestLogIds", "CurrentMoney", "Accepted" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientReturningPlayerPrompt : pb::IMessage<ClientReturningPlayerPrompt>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientReturningPlayerPrompt> _parser = new pb::MessageParser<ClientReturningPlayerPrompt>(() => new ClientReturningPlayerPrompt());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientReturningPlayerPrompt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.Client.ClientReturningPlayerPromptReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientReturningPlayerPrompt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientReturningPlayerPrompt(ClientReturningPlayerPrompt other) : this() {
      _hasBits0 = other._hasBits0;
      client_ = other.client_ != null ? other.client_.Clone() : null;
      world_ = other.world_ != null ? other.world_.Clone() : null;
      level_ = other.level_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      chromieTimeId_ = other.chromieTimeId_;
      numTotalBagSlots_ = other.numTotalBagSlots_;
      numEmptyBagSlots_ = other.numEmptyBagSlots_;
      questLogIds_ = other.questLogIds_.Clone();
      currentMoney_ = other.currentMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientReturningPlayerPrompt Clone() {
      return new ClientReturningPlayerPrompt(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::Blizzard.Telemetry.Wow.Client.ClientInfo client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.ClientInfo Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    /// <summary>Field number for the "world" field.</summary>
    public const int WorldFieldNumber = 2;
    private global::Blizzard.Telemetry.Wow.Client.WorldInfo world_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.WorldInfo World {
      get { return world_; }
      set {
        world_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 4;
    private readonly static float PosXDefaultValue = 0F;

    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosX {
      get { if ((_hasBits0 & 2) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 5;
    private readonly static float PosYDefaultValue = 0F;

    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosY {
      get { if ((_hasBits0 & 4) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pos_z" field.</summary>
    public const int PosZFieldNumber = 6;
    private readonly static float PosZDefaultValue = 0F;

    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosZ {
      get { if ((_hasBits0 & 8) != 0) { return posZ_; } else { return PosZDefaultValue; } }
      set {
        _hasBits0 |= 8;
        posZ_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZ() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "chromie_time_id" field.</summary>
    public const int ChromieTimeIdFieldNumber = 7;
    private readonly static int ChromieTimeIdDefaultValue = 0;

    private int chromieTimeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChromieTimeId {
      get { if ((_hasBits0 & 16) != 0) { return chromieTimeId_; } else { return ChromieTimeIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        chromieTimeId_ = value;
      }
    }
    /// <summary>Gets whether the "chromie_time_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChromieTimeId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "chromie_time_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChromieTimeId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "num_total_bag_slots" field.</summary>
    public const int NumTotalBagSlotsFieldNumber = 8;
    private readonly static uint NumTotalBagSlotsDefaultValue = 0;

    private uint numTotalBagSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumTotalBagSlots {
      get { if ((_hasBits0 & 32) != 0) { return numTotalBagSlots_; } else { return NumTotalBagSlotsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        numTotalBagSlots_ = value;
      }
    }
    /// <summary>Gets whether the "num_total_bag_slots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumTotalBagSlots {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "num_total_bag_slots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumTotalBagSlots() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "num_empty_bag_slots" field.</summary>
    public const int NumEmptyBagSlotsFieldNumber = 9;
    private readonly static int NumEmptyBagSlotsDefaultValue = 0;

    private int numEmptyBagSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumEmptyBagSlots {
      get { if ((_hasBits0 & 64) != 0) { return numEmptyBagSlots_; } else { return NumEmptyBagSlotsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        numEmptyBagSlots_ = value;
      }
    }
    /// <summary>Gets whether the "num_empty_bag_slots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumEmptyBagSlots {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "num_empty_bag_slots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumEmptyBagSlots() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "quest_log_ids" field.</summary>
    public const int QuestLogIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_questLogIds_codec
        = pb::FieldCodec.ForInt32(80);
    private readonly pbc::RepeatedField<int> questLogIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> QuestLogIds {
      get { return questLogIds_; }
    }

    /// <summary>Field number for the "current_money" field.</summary>
    public const int CurrentMoneyFieldNumber = 11;
    private readonly static ulong CurrentMoneyDefaultValue = 0UL;

    private ulong currentMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CurrentMoney {
      get { if ((_hasBits0 & 128) != 0) { return currentMoney_; } else { return CurrentMoneyDefaultValue; } }
      set {
        _hasBits0 |= 128;
        currentMoney_ = value;
      }
    }
    /// <summary>Gets whether the "current_money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentMoney {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "current_money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentMoney() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientReturningPlayerPrompt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientReturningPlayerPrompt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(World, other.World)) return false;
      if (Level != other.Level) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (ChromieTimeId != other.ChromieTimeId) return false;
      if (NumTotalBagSlots != other.NumTotalBagSlots) return false;
      if (NumEmptyBagSlots != other.NumEmptyBagSlots) return false;
      if(!questLogIds_.Equals(other.questLogIds_)) return false;
      if (CurrentMoney != other.CurrentMoney) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      if (world_ != null) hash ^= World.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasPosX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (HasPosY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (HasPosZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (HasChromieTimeId) hash ^= ChromieTimeId.GetHashCode();
      if (HasNumTotalBagSlots) hash ^= NumTotalBagSlots.GetHashCode();
      if (HasNumEmptyBagSlots) hash ^= NumEmptyBagSlots.GetHashCode();
      hash ^= questLogIds_.GetHashCode();
      if (HasCurrentMoney) hash ^= CurrentMoney.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HasPosX) {
        output.WriteRawTag(37);
        output.WriteFloat(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(45);
        output.WriteFloat(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(53);
        output.WriteFloat(PosZ);
      }
      if (HasChromieTimeId) {
        output.WriteRawTag(56);
        output.WriteInt32(ChromieTimeId);
      }
      if (HasNumTotalBagSlots) {
        output.WriteRawTag(64);
        output.WriteUInt32(NumTotalBagSlots);
      }
      if (HasNumEmptyBagSlots) {
        output.WriteRawTag(72);
        output.WriteInt32(NumEmptyBagSlots);
      }
      questLogIds_.WriteTo(output, _repeated_questLogIds_codec);
      if (HasCurrentMoney) {
        output.WriteRawTag(88);
        output.WriteUInt64(CurrentMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HasPosX) {
        output.WriteRawTag(37);
        output.WriteFloat(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(45);
        output.WriteFloat(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(53);
        output.WriteFloat(PosZ);
      }
      if (HasChromieTimeId) {
        output.WriteRawTag(56);
        output.WriteInt32(ChromieTimeId);
      }
      if (HasNumTotalBagSlots) {
        output.WriteRawTag(64);
        output.WriteUInt32(NumTotalBagSlots);
      }
      if (HasNumEmptyBagSlots) {
        output.WriteRawTag(72);
        output.WriteInt32(NumEmptyBagSlots);
      }
      questLogIds_.WriteTo(ref output, _repeated_questLogIds_codec);
      if (HasCurrentMoney) {
        output.WriteRawTag(88);
        output.WriteUInt64(CurrentMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (world_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(World);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasPosX) {
        size += 1 + 4;
      }
      if (HasPosY) {
        size += 1 + 4;
      }
      if (HasPosZ) {
        size += 1 + 4;
      }
      if (HasChromieTimeId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChromieTimeId);
      }
      if (HasNumTotalBagSlots) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumTotalBagSlots);
      }
      if (HasNumEmptyBagSlots) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumEmptyBagSlots);
      }
      size += questLogIds_.CalculateSize(_repeated_questLogIds_codec);
      if (HasCurrentMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentMoney);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientReturningPlayerPrompt other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
        }
        Client.MergeFrom(other.Client);
      }
      if (other.world_ != null) {
        if (world_ == null) {
          World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
        }
        World.MergeFrom(other.World);
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      if (other.HasPosZ) {
        PosZ = other.PosZ;
      }
      if (other.HasChromieTimeId) {
        ChromieTimeId = other.ChromieTimeId;
      }
      if (other.HasNumTotalBagSlots) {
        NumTotalBagSlots = other.NumTotalBagSlots;
      }
      if (other.HasNumEmptyBagSlots) {
        NumEmptyBagSlots = other.NumEmptyBagSlots;
      }
      questLogIds_.Add(other.questLogIds_);
      if (other.HasCurrentMoney) {
        CurrentMoney = other.CurrentMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
            }
            input.ReadMessage(World);
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 37: {
            PosX = input.ReadFloat();
            break;
          }
          case 45: {
            PosY = input.ReadFloat();
            break;
          }
          case 53: {
            PosZ = input.ReadFloat();
            break;
          }
          case 56: {
            ChromieTimeId = input.ReadInt32();
            break;
          }
          case 64: {
            NumTotalBagSlots = input.ReadUInt32();
            break;
          }
          case 72: {
            NumEmptyBagSlots = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            questLogIds_.AddEntriesFrom(input, _repeated_questLogIds_codec);
            break;
          }
          case 88: {
            CurrentMoney = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
            }
            input.ReadMessage(World);
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 37: {
            PosX = input.ReadFloat();
            break;
          }
          case 45: {
            PosY = input.ReadFloat();
            break;
          }
          case 53: {
            PosZ = input.ReadFloat();
            break;
          }
          case 56: {
            ChromieTimeId = input.ReadInt32();
            break;
          }
          case 64: {
            NumTotalBagSlots = input.ReadUInt32();
            break;
          }
          case 72: {
            NumEmptyBagSlots = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            questLogIds_.AddEntriesFrom(ref input, _repeated_questLogIds_codec);
            break;
          }
          case 88: {
            CurrentMoney = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientReturningPlayerPromptResponse : pb::IMessage<ClientReturningPlayerPromptResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientReturningPlayerPromptResponse> _parser = new pb::MessageParser<ClientReturningPlayerPromptResponse>(() => new ClientReturningPlayerPromptResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClientReturningPlayerPromptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.Client.ClientReturningPlayerPromptReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientReturningPlayerPromptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientReturningPlayerPromptResponse(ClientReturningPlayerPromptResponse other) : this() {
      _hasBits0 = other._hasBits0;
      client_ = other.client_ != null ? other.client_.Clone() : null;
      world_ = other.world_ != null ? other.world_.Clone() : null;
      level_ = other.level_;
      posX_ = other.posX_;
      posY_ = other.posY_;
      posZ_ = other.posZ_;
      chromieTimeId_ = other.chromieTimeId_;
      numTotalBagSlots_ = other.numTotalBagSlots_;
      numEmptyBagSlots_ = other.numEmptyBagSlots_;
      questLogIds_ = other.questLogIds_.Clone();
      currentMoney_ = other.currentMoney_;
      accepted_ = other.accepted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClientReturningPlayerPromptResponse Clone() {
      return new ClientReturningPlayerPromptResponse(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::Blizzard.Telemetry.Wow.Client.ClientInfo client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.ClientInfo Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    /// <summary>Field number for the "world" field.</summary>
    public const int WorldFieldNumber = 2;
    private global::Blizzard.Telemetry.Wow.Client.WorldInfo world_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Client.WorldInfo World {
      get { return world_; }
      set {
        world_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private readonly static int LevelDefaultValue = 0;

    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos_x" field.</summary>
    public const int PosXFieldNumber = 4;
    private readonly static float PosXDefaultValue = 0F;

    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosX {
      get { if ((_hasBits0 & 2) != 0) { return posX_; } else { return PosXDefaultValue; } }
      set {
        _hasBits0 |= 2;
        posX_ = value;
      }
    }
    /// <summary>Gets whether the "pos_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pos_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pos_y" field.</summary>
    public const int PosYFieldNumber = 5;
    private readonly static float PosYDefaultValue = 0F;

    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosY {
      get { if ((_hasBits0 & 4) != 0) { return posY_; } else { return PosYDefaultValue; } }
      set {
        _hasBits0 |= 4;
        posY_ = value;
      }
    }
    /// <summary>Gets whether the "pos_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pos_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pos_z" field.</summary>
    public const int PosZFieldNumber = 6;
    private readonly static float PosZDefaultValue = 0F;

    private float posZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PosZ {
      get { if ((_hasBits0 & 8) != 0) { return posZ_; } else { return PosZDefaultValue; } }
      set {
        _hasBits0 |= 8;
        posZ_ = value;
      }
    }
    /// <summary>Gets whether the "pos_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosZ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pos_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosZ() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "chromie_time_id" field.</summary>
    public const int ChromieTimeIdFieldNumber = 7;
    private readonly static int ChromieTimeIdDefaultValue = 0;

    private int chromieTimeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChromieTimeId {
      get { if ((_hasBits0 & 16) != 0) { return chromieTimeId_; } else { return ChromieTimeIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        chromieTimeId_ = value;
      }
    }
    /// <summary>Gets whether the "chromie_time_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChromieTimeId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "chromie_time_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChromieTimeId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "num_total_bag_slots" field.</summary>
    public const int NumTotalBagSlotsFieldNumber = 8;
    private readonly static uint NumTotalBagSlotsDefaultValue = 0;

    private uint numTotalBagSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumTotalBagSlots {
      get { if ((_hasBits0 & 32) != 0) { return numTotalBagSlots_; } else { return NumTotalBagSlotsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        numTotalBagSlots_ = value;
      }
    }
    /// <summary>Gets whether the "num_total_bag_slots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumTotalBagSlots {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "num_total_bag_slots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumTotalBagSlots() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "num_empty_bag_slots" field.</summary>
    public const int NumEmptyBagSlotsFieldNumber = 9;
    private readonly static int NumEmptyBagSlotsDefaultValue = 0;

    private int numEmptyBagSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumEmptyBagSlots {
      get { if ((_hasBits0 & 64) != 0) { return numEmptyBagSlots_; } else { return NumEmptyBagSlotsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        numEmptyBagSlots_ = value;
      }
    }
    /// <summary>Gets whether the "num_empty_bag_slots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumEmptyBagSlots {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "num_empty_bag_slots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumEmptyBagSlots() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "quest_log_ids" field.</summary>
    public const int QuestLogIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_questLogIds_codec
        = pb::FieldCodec.ForInt32(80);
    private readonly pbc::RepeatedField<int> questLogIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> QuestLogIds {
      get { return questLogIds_; }
    }

    /// <summary>Field number for the "current_money" field.</summary>
    public const int CurrentMoneyFieldNumber = 11;
    private readonly static ulong CurrentMoneyDefaultValue = 0UL;

    private ulong currentMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CurrentMoney {
      get { if ((_hasBits0 & 128) != 0) { return currentMoney_; } else { return CurrentMoneyDefaultValue; } }
      set {
        _hasBits0 |= 128;
        currentMoney_ = value;
      }
    }
    /// <summary>Gets whether the "current_money" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentMoney {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "current_money" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentMoney() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "accepted" field.</summary>
    public const int AcceptedFieldNumber = 12;
    private readonly static bool AcceptedDefaultValue = false;

    private bool accepted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Accepted {
      get { if ((_hasBits0 & 256) != 0) { return accepted_; } else { return AcceptedDefaultValue; } }
      set {
        _hasBits0 |= 256;
        accepted_ = value;
      }
    }
    /// <summary>Gets whether the "accepted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccepted {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "accepted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccepted() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClientReturningPlayerPromptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClientReturningPlayerPromptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(World, other.World)) return false;
      if (Level != other.Level) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosZ, other.PosZ)) return false;
      if (ChromieTimeId != other.ChromieTimeId) return false;
      if (NumTotalBagSlots != other.NumTotalBagSlots) return false;
      if (NumEmptyBagSlots != other.NumEmptyBagSlots) return false;
      if(!questLogIds_.Equals(other.questLogIds_)) return false;
      if (CurrentMoney != other.CurrentMoney) return false;
      if (Accepted != other.Accepted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      if (world_ != null) hash ^= World.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasPosX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (HasPosY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (HasPosZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosZ);
      if (HasChromieTimeId) hash ^= ChromieTimeId.GetHashCode();
      if (HasNumTotalBagSlots) hash ^= NumTotalBagSlots.GetHashCode();
      if (HasNumEmptyBagSlots) hash ^= NumEmptyBagSlots.GetHashCode();
      hash ^= questLogIds_.GetHashCode();
      if (HasCurrentMoney) hash ^= CurrentMoney.GetHashCode();
      if (HasAccepted) hash ^= Accepted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HasPosX) {
        output.WriteRawTag(37);
        output.WriteFloat(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(45);
        output.WriteFloat(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(53);
        output.WriteFloat(PosZ);
      }
      if (HasChromieTimeId) {
        output.WriteRawTag(56);
        output.WriteInt32(ChromieTimeId);
      }
      if (HasNumTotalBagSlots) {
        output.WriteRawTag(64);
        output.WriteUInt32(NumTotalBagSlots);
      }
      if (HasNumEmptyBagSlots) {
        output.WriteRawTag(72);
        output.WriteInt32(NumEmptyBagSlots);
      }
      questLogIds_.WriteTo(output, _repeated_questLogIds_codec);
      if (HasCurrentMoney) {
        output.WriteRawTag(88);
        output.WriteUInt64(CurrentMoney);
      }
      if (HasAccepted) {
        output.WriteRawTag(96);
        output.WriteBool(Accepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (world_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(World);
      }
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (HasPosX) {
        output.WriteRawTag(37);
        output.WriteFloat(PosX);
      }
      if (HasPosY) {
        output.WriteRawTag(45);
        output.WriteFloat(PosY);
      }
      if (HasPosZ) {
        output.WriteRawTag(53);
        output.WriteFloat(PosZ);
      }
      if (HasChromieTimeId) {
        output.WriteRawTag(56);
        output.WriteInt32(ChromieTimeId);
      }
      if (HasNumTotalBagSlots) {
        output.WriteRawTag(64);
        output.WriteUInt32(NumTotalBagSlots);
      }
      if (HasNumEmptyBagSlots) {
        output.WriteRawTag(72);
        output.WriteInt32(NumEmptyBagSlots);
      }
      questLogIds_.WriteTo(ref output, _repeated_questLogIds_codec);
      if (HasCurrentMoney) {
        output.WriteRawTag(88);
        output.WriteUInt64(CurrentMoney);
      }
      if (HasAccepted) {
        output.WriteRawTag(96);
        output.WriteBool(Accepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (world_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(World);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasPosX) {
        size += 1 + 4;
      }
      if (HasPosY) {
        size += 1 + 4;
      }
      if (HasPosZ) {
        size += 1 + 4;
      }
      if (HasChromieTimeId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChromieTimeId);
      }
      if (HasNumTotalBagSlots) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumTotalBagSlots);
      }
      if (HasNumEmptyBagSlots) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumEmptyBagSlots);
      }
      size += questLogIds_.CalculateSize(_repeated_questLogIds_codec);
      if (HasCurrentMoney) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentMoney);
      }
      if (HasAccepted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClientReturningPlayerPromptResponse other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
        }
        Client.MergeFrom(other.Client);
      }
      if (other.world_ != null) {
        if (world_ == null) {
          World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
        }
        World.MergeFrom(other.World);
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasPosX) {
        PosX = other.PosX;
      }
      if (other.HasPosY) {
        PosY = other.PosY;
      }
      if (other.HasPosZ) {
        PosZ = other.PosZ;
      }
      if (other.HasChromieTimeId) {
        ChromieTimeId = other.ChromieTimeId;
      }
      if (other.HasNumTotalBagSlots) {
        NumTotalBagSlots = other.NumTotalBagSlots;
      }
      if (other.HasNumEmptyBagSlots) {
        NumEmptyBagSlots = other.NumEmptyBagSlots;
      }
      questLogIds_.Add(other.questLogIds_);
      if (other.HasCurrentMoney) {
        CurrentMoney = other.CurrentMoney;
      }
      if (other.HasAccepted) {
        Accepted = other.Accepted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
            }
            input.ReadMessage(World);
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 37: {
            PosX = input.ReadFloat();
            break;
          }
          case 45: {
            PosY = input.ReadFloat();
            break;
          }
          case 53: {
            PosZ = input.ReadFloat();
            break;
          }
          case 56: {
            ChromieTimeId = input.ReadInt32();
            break;
          }
          case 64: {
            NumTotalBagSlots = input.ReadUInt32();
            break;
          }
          case 72: {
            NumEmptyBagSlots = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            questLogIds_.AddEntriesFrom(input, _repeated_questLogIds_codec);
            break;
          }
          case 88: {
            CurrentMoney = input.ReadUInt64();
            break;
          }
          case 96: {
            Accepted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Blizzard.Telemetry.Wow.Client.ClientInfo();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (world_ == null) {
              World = new global::Blizzard.Telemetry.Wow.Client.WorldInfo();
            }
            input.ReadMessage(World);
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 37: {
            PosX = input.ReadFloat();
            break;
          }
          case 45: {
            PosY = input.ReadFloat();
            break;
          }
          case 53: {
            PosZ = input.ReadFloat();
            break;
          }
          case 56: {
            ChromieTimeId = input.ReadInt32();
            break;
          }
          case 64: {
            NumTotalBagSlots = input.ReadUInt32();
            break;
          }
          case 72: {
            NumEmptyBagSlots = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            questLogIds_.AddEntriesFrom(ref input, _repeated_questLogIds_codec);
            break;
          }
          case 88: {
            CurrentMoney = input.ReadUInt64();
            break;
          }
          case 96: {
            Accepted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
