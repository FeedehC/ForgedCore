// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TelemetrySharedImports.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Blizzard.Telemetry.Wow {

  /// <summary>Holder for reflection information generated from TelemetrySharedImports.proto</summary>
  public static partial class TelemetrySharedImportsReflection {

    #region Descriptor
    /// <summary>File descriptor for TelemetrySharedImports.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TelemetrySharedImportsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxUZWxlbWV0cnlTaGFyZWRJbXBvcnRzLnByb3RvEhZCbGl6emFyZC5UZWxl",
            "bWV0cnkuV293Ghp0ZWxlbWV0cnlfZXh0ZW5zaW9ucy5wcm90byKaAQoRQ2hh",
            "cmFjdGVySWRlbnRpdHkSFAoMY2hhcmFjdGVyX2lkGAEgASgEEhQKDGNmZ19y",
            "ZWFsbV9pZBgCIAEoDRIXCg9ibmV0X2FjY291bnRfaWQYAyABKAQSFwoPZ2Ft",
            "ZV9hY2NvdW50X2lkGAQgASgEEhEKCXJlZ2lvbl9pZBgFIAEoBRIUCgxjb21t",
            "dW5pdHlfaWQYBiABKAQigQEKDFJlYWxtQ29udGV4dBI3CgxuYXRpdmVfcmVh",
            "bG0YASABKAsyIS5CbGl6emFyZC5UZWxlbWV0cnkuV293LlJlYWxtSW5mbxI4",
            "Cg12aXJ0dWFsX3JlYWxtGAIgASgLMiEuQmxpenphcmQuVGVsZW1ldHJ5Lldv",
            "dy5SZWFsbUluZm8icQoJUmVhbG1JbmZvEhQKDHJlYWxtX3JlZ2lvbhgBIAEo",
            "DRISCgpyZWFsbV9zaXRlGAIgASgNEhAKCHJlYWxtX2lkGAMgASgNEhQKDGNm",
            "Z19yZWFsbV9pZBgEIAEoDRISCgpyZWFsbV9uYW1lGAUgASgJIm4KDUphbVNl",
            "cnZlclNwZWMSNQoKcmVhbG1faW5mbxgBIAEoCzIhLkJsaXp6YXJkLlRlbGVt",
            "ZXRyeS5Xb3cuUmVhbG1JbmZvEhEKCXNlcnZlcl9pZBgCIAEoDRITCgtzZXJ2",
            "ZXJfdHlwZRgDIAEoDSJcCgdNYXBJbmZvEg4KBm1hcF9pZBgBIAEoDRIVCg1h",
            "cmVhX3NoYXJlX2lkGAIgASgNEhMKC2luc3RhbmNlX2lkGAMgASgEEhUKDXNp",
            "bXVsYXRpb25faWQYBCABKAQikQEKDFdvcmxkUG9ydExvYxIOCgZtYXBfaWQY",
            "ASABKA0SCQoBeBgCIAEoAhIJCgF5GAMgASgCEgkKAXoYBCABKAISFQoNYXJl",
            "YV90YWJsZV9pZBgFIAEoDRITCgtzdWJfYXJlYV9pZBgGIAEoDRIUCgx3bW9f",
            "Z3JvdXBfaWQYByABKA0SDgoGZmFjaW5nGAggASgCIlAKDEJpbmRMb2NhdGlv",
            "bhIOCgZtYXBfaWQYASABKA0SDwoHYXJlYV9pZBgCIAEoDRIJCgF4GAMgASgC",
            "EgkKAXkYBCABKAISCQoBehgFIAEoAiJPCgtBY2NvdW50SW5mbxIXCg9ibmV0",
            "X2FjY291bnRfaWQYASABKAQSFwoPZ2FtZV9hY2NvdW50X2lkGAIgAygEEg4K",
            "BnJlZ2lvbhgDIAEoDSJgCglQYXJ0eUluZm8SFAoMY2ZnX3JlYWxtX2lkGAEg",
            "ASgNEhAKCHBhcnR5X2lkGAIgASgEEhEKCWlzX2xlYWRlchgDIAEoCBIYChBp",
            "c19jcm9zc19mYWN0aW9uGAQgASgIIkMKCUd1aWxkSW5mbxIUCgxjZmdfcmVh",
            "bG1faWQYASABKA0SEAoIZ3VpbGRfaWQYAiABKAQSDgoGcmVnaW9uGAMgASgN",
            "IqIBCgRDb3N0EkUKDHJlc291cmNldHlwZRgBIAEoDjIpLkJsaXp6YXJkLlRl",
            "bGVtZXRyeS5Xb3cuQ29zdC5SZXNvdXJjZVR5cGU6BElURU0SEwoLcmVzb3Vy",
            "Y2VfaWQYAiABKA0SFgoOcmVzb3VyY2VfY291bnQYAyABKA0iJgoMUmVzb3Vy",
            "Y2VUeXBlEggKBElURU0QABIMCghDVVJSRU5DWRABIjsKDEluc3RhbmNlR1VJ",
            "RBIWCg5wcm94eV9yZWFsbV9pZBgBIAEoDRITCgtpbnN0YW5jZV9pZBgCIAEo",
            "BCIyCg5Vc2VyUm91dGVyR1VJRBIUCgxyZWFsbV9yZWNfaWQYASABKA0SCgoC",
            "aWQYAiABKAQiTgoOR2FtZU9iamVjdEdVSUQSEQoJb2JqZWN0X2lkGAEgASgN",
            "EhQKDGNmZ19yZWFsbV9pZBgCIAEoDRITCgtpbnN0YW5jZV9pZBgDIAEoBCJr",
            "CgxTY2VuYXJpb0dVSUQSEwoLc2NlbmFyaW9faWQYASABKA0SDgoGbWFwX2lk",
            "GAIgASgNEhAKCHJlYWxtX2lkGAMgASgNEhEKCXNlcnZlcl9pZBgEIAEoDRIR",
            "Cgl1bmlxdWVfaWQYBSABKAQigQEKFFdvcmxkVHJhbnNhY3Rpb25HVUlEEhgK",
            "EHRyYW5zYWN0aW9uX3R5cGUYASABKA0SFAoMcmVhbG1fcmVjX2lkGAIgASgN",
            "Eg4KBm1hcF9pZBgDIAEoBRIRCglzZXJ2ZXJfaWQYBCABKAUSFgoOdHJhbnNh",
            "Y3Rpb25faWQYBSABKAQiXwoMRmlsZUxvY2F0aW9uEhMKC3NvdXJjZV9uYW1l",
            "GAEgASgJEhIKCmV2ZW50X25hbWUYAiABKAkSEQoJZmlsZV9uYW1lGAMgASgJ",
            "EhMKC2xpbmVfbnVtYmVyGAQgASgFIikKBlRhbGVudBIRCgl0YWxlbnRfaWQY",
            "ASABKA0SDAoEcmFuaxgCIAEoDSIrCgVHbHlwaBIQCghnbHlwaF9pZBgBIAEo",
            "DRIQCghzcGVsbF9pZBgCIAEoBSIrCg9JdGVtRW5jaGFudG1lbnQSDAoEc2xv",
            "dBgBIAEoDRIKCgJpZBgCIAEoDSJbCg9JdGVtU29ja2V0ZWRHZW0SDgoGc29j",
            "a2V0GAEgASgNEg8KB2l0ZW1faWQYAiABKA0SDwoHY29udGV4dBgDIAEoDRIW",
            "Cg5ib251c19saXN0X2lkcxgEIAMoBSIXCgRMb290Eg8KB2xvb3RfaWQYASAB",
            "KAQiOQoQTWVudG9yc2hpcFN0YXR1cxIQCghpc19ndWlkZRgBIAEoCBITCgtp",
            "c19uZXdjb21lchgCIAEoCCIrCgRTdGF0Eg8KB3N0YXRfaWQYASABKA0SEgoK",
            "c3RhdF92YWx1ZRgCIAEoDSI3CgxDdXJyZW5jeURhdGESFQoNY3VycmVuY3lf",
            "dHlwZRgBIAEoDRIQCghxdWFudGl0eRgCIAEoDSI6CgxRdWVzdExvZ0RhdGES",
            "EAoIcXVlc3RfaWQYASABKA0SGAoQYWNjZXB0X3RpbWVzdGFtcBgCIAEoBCI+",
            "ChFFYXJuZWRBY2hpZXZlbWVudBIWCg5hY2hpZXZlbWVudF9pZBgBIAEoBRIR",
            "Cgl0aW1lc3RhbXAYAiABKAQiLAoISXRlbUxpdGUSDAoEY19pZBgBIAEoDRIS",
            "CgpjX3F1YW50aXR5GAIgASgNIjAKDEN1cnJlbmN5TGl0ZRIMCgRjX2lkGAEg",
            "ASgNEhIKCmNfcXVhbnRpdHkYAiABKA0iXwoKVHJhaXRFbnRyeRIPCgdub2Rl",
            "X2lkGAEgASgFEhAKCGVudHJ5X2lkGAIgASgFEhcKD3B1cmNoYXNlZF9yYW5r",
            "cxgDIAEoBRIVCg1ncmFudGVkX3JhbmtzGAQgASgFIsIBCgtUcmFpdENvbmZp",
            "ZxIRCgljb25maWdfaWQYASABKAUSEwoLY29uZmlnX3R5cGUYAiABKAUSMwoH",
            "ZW50cmllcxgDIAMoCzIiLkJsaXp6YXJkLlRlbGVtZXRyeS5Xb3cuVHJhaXRF",
            "bnRyeRIPCgdzcGVjX2lkGAQgASgFEhQKDGNvbWJhdF9mbGFncxgFIAEoBRIV",
            "Cg1za2lsbF9saW5lX2lkGAYgASgFEhgKEGNvbmZpZ19zeXN0ZW1faWQYByAB",
            "KAUijQEKDk5vZGVFbnRyeURlbHRhEg8KB25vZGVfaWQYASABKAUSFAoMb2xk",
            "X2VudHJ5X2lkGAIgASgFEhQKDG5ld19lbnRyeV9pZBgDIAEoBRIQCghvbGRf",
            "cmFuaxgEIAEoBRIQCghuZXdfcmFuaxgFIAEoBRIaChJncmFudGVkX3Jhbmtf",
            "ZGVsdGEYBiABKAUiZwoQU3BlbGxEYW1hZ2VTdGF0cxIQCghzcGVsbF9pZBgB",
            "IAEoDRIXCg9udW1iZXJfb2ZfY2FzdHMYAiABKA0SFAoMdG90YWxfZGFtYWdl",
            "GAMgASgEEhIKCm1heF9kYW1hZ2UYBCABKAQ="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Blizzard.Telemetry.TelemetryExtensionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.CharacterIdentity), global::Blizzard.Telemetry.Wow.CharacterIdentity.Parser, new[]{ "CharacterId", "CfgRealmId", "BnetAccountId", "GameAccountId", "RegionId", "CommunityId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.RealmContext), global::Blizzard.Telemetry.Wow.RealmContext.Parser, new[]{ "NativeRealm", "VirtualRealm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.RealmInfo), global::Blizzard.Telemetry.Wow.RealmInfo.Parser, new[]{ "RealmRegion", "RealmSite", "RealmId", "CfgRealmId", "RealmName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.JamServerSpec), global::Blizzard.Telemetry.Wow.JamServerSpec.Parser, new[]{ "RealmInfo", "ServerId", "ServerType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.MapInfo), global::Blizzard.Telemetry.Wow.MapInfo.Parser, new[]{ "MapId", "AreaShareId", "InstanceId", "SimulationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.WorldPortLoc), global::Blizzard.Telemetry.Wow.WorldPortLoc.Parser, new[]{ "MapId", "X", "Y", "Z", "AreaTableId", "SubAreaId", "WmoGroupId", "Facing" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.BindLocation), global::Blizzard.Telemetry.Wow.BindLocation.Parser, new[]{ "MapId", "AreaId", "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.AccountInfo), global::Blizzard.Telemetry.Wow.AccountInfo.Parser, new[]{ "BnetAccountId", "GameAccountId", "Region" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.PartyInfo), global::Blizzard.Telemetry.Wow.PartyInfo.Parser, new[]{ "CfgRealmId", "PartyId", "IsLeader", "IsCrossFaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.GuildInfo), global::Blizzard.Telemetry.Wow.GuildInfo.Parser, new[]{ "CfgRealmId", "GuildId", "Region" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Cost), global::Blizzard.Telemetry.Wow.Cost.Parser, new[]{ "Resourcetype", "ResourceId", "ResourceCount" }, null, new[]{ typeof(global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.InstanceGUID), global::Blizzard.Telemetry.Wow.InstanceGUID.Parser, new[]{ "ProxyRealmId", "InstanceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.UserRouterGUID), global::Blizzard.Telemetry.Wow.UserRouterGUID.Parser, new[]{ "RealmRecId", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.GameObjectGUID), global::Blizzard.Telemetry.Wow.GameObjectGUID.Parser, new[]{ "ObjectId", "CfgRealmId", "InstanceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.ScenarioGUID), global::Blizzard.Telemetry.Wow.ScenarioGUID.Parser, new[]{ "ScenarioId", "MapId", "RealmId", "ServerId", "UniqueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.WorldTransactionGUID), global::Blizzard.Telemetry.Wow.WorldTransactionGUID.Parser, new[]{ "TransactionType", "RealmRecId", "MapId", "ServerId", "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.FileLocation), global::Blizzard.Telemetry.Wow.FileLocation.Parser, new[]{ "SourceName", "EventName", "FileName", "LineNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Talent), global::Blizzard.Telemetry.Wow.Talent.Parser, new[]{ "TalentId", "Rank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Glyph), global::Blizzard.Telemetry.Wow.Glyph.Parser, new[]{ "GlyphId", "SpellId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.ItemEnchantment), global::Blizzard.Telemetry.Wow.ItemEnchantment.Parser, new[]{ "Slot", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.ItemSocketedGem), global::Blizzard.Telemetry.Wow.ItemSocketedGem.Parser, new[]{ "Socket", "ItemId", "Context", "BonusListIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Loot), global::Blizzard.Telemetry.Wow.Loot.Parser, new[]{ "LootId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.MentorshipStatus), global::Blizzard.Telemetry.Wow.MentorshipStatus.Parser, new[]{ "IsGuide", "IsNewcomer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.Stat), global::Blizzard.Telemetry.Wow.Stat.Parser, new[]{ "StatId", "StatValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.CurrencyData), global::Blizzard.Telemetry.Wow.CurrencyData.Parser, new[]{ "CurrencyType", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.QuestLogData), global::Blizzard.Telemetry.Wow.QuestLogData.Parser, new[]{ "QuestId", "AcceptTimestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.EarnedAchievement), global::Blizzard.Telemetry.Wow.EarnedAchievement.Parser, new[]{ "AchievementId", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.ItemLite), global::Blizzard.Telemetry.Wow.ItemLite.Parser, new[]{ "CId", "CQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.CurrencyLite), global::Blizzard.Telemetry.Wow.CurrencyLite.Parser, new[]{ "CId", "CQuantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.TraitEntry), global::Blizzard.Telemetry.Wow.TraitEntry.Parser, new[]{ "NodeId", "EntryId", "PurchasedRanks", "GrantedRanks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.TraitConfig), global::Blizzard.Telemetry.Wow.TraitConfig.Parser, new[]{ "ConfigId", "ConfigType", "Entries", "SpecId", "CombatFlags", "SkillLineId", "ConfigSystemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.NodeEntryDelta), global::Blizzard.Telemetry.Wow.NodeEntryDelta.Parser, new[]{ "NodeId", "OldEntryId", "NewEntryId", "OldRank", "NewRank", "GrantedRankDelta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.Wow.SpellDamageStats), global::Blizzard.Telemetry.Wow.SpellDamageStats.Parser, new[]{ "SpellId", "NumberOfCasts", "TotalDamage", "MaxDamage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CharacterIdentity : pb::IMessage<CharacterIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterIdentity> _parser = new pb::MessageParser<CharacterIdentity>(() => new CharacterIdentity());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdentity(CharacterIdentity other) : this() {
      _hasBits0 = other._hasBits0;
      characterId_ = other.characterId_;
      cfgRealmId_ = other.cfgRealmId_;
      bnetAccountId_ = other.bnetAccountId_;
      gameAccountId_ = other.gameAccountId_;
      regionId_ = other.regionId_;
      communityId_ = other.communityId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterIdentity Clone() {
      return new CharacterIdentity(this);
    }

    /// <summary>Field number for the "character_id" field.</summary>
    public const int CharacterIdFieldNumber = 1;
    private readonly static ulong CharacterIdDefaultValue = 0UL;

    private ulong characterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CharacterId {
      get { if ((_hasBits0 & 1) != 0) { return characterId_; } else { return CharacterIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        characterId_ = value;
      }
    }
    /// <summary>Gets whether the "character_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCharacterId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "character_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCharacterId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cfg_realm_id" field.</summary>
    public const int CfgRealmIdFieldNumber = 2;
    private readonly static uint CfgRealmIdDefaultValue = 0;

    private uint cfgRealmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CfgRealmId {
      get { if ((_hasBits0 & 2) != 0) { return cfgRealmId_; } else { return CfgRealmIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cfgRealmId_ = value;
      }
    }
    /// <summary>Gets whether the "cfg_realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfgRealmId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cfg_realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfgRealmId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bnet_account_id" field.</summary>
    public const int BnetAccountIdFieldNumber = 3;
    private readonly static ulong BnetAccountIdDefaultValue = 0UL;

    private ulong bnetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BnetAccountId {
      get { if ((_hasBits0 & 4) != 0) { return bnetAccountId_; } else { return BnetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bnetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "bnet_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBnetAccountId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bnet_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBnetAccountId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 4;
    private readonly static ulong GameAccountIdDefaultValue = 0UL;

    private ulong gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GameAccountId {
      get { if ((_hasBits0 & 8) != 0) { return gameAccountId_; } else { return GameAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "game_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameAccountId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "game_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameAccountId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "region_id" field.</summary>
    public const int RegionIdFieldNumber = 5;
    private readonly static int RegionIdDefaultValue = 0;

    private int regionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RegionId {
      get { if ((_hasBits0 & 16) != 0) { return regionId_; } else { return RegionIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        regionId_ = value;
      }
    }
    /// <summary>Gets whether the "region_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegionId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "region_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegionId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "community_id" field.</summary>
    public const int CommunityIdFieldNumber = 6;
    private readonly static ulong CommunityIdDefaultValue = 0UL;

    private ulong communityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CommunityId {
      get { if ((_hasBits0 & 32) != 0) { return communityId_; } else { return CommunityIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        communityId_ = value;
      }
    }
    /// <summary>Gets whether the "community_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommunityId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "community_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommunityId() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharacterId != other.CharacterId) return false;
      if (CfgRealmId != other.CfgRealmId) return false;
      if (BnetAccountId != other.BnetAccountId) return false;
      if (GameAccountId != other.GameAccountId) return false;
      if (RegionId != other.RegionId) return false;
      if (CommunityId != other.CommunityId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCharacterId) hash ^= CharacterId.GetHashCode();
      if (HasCfgRealmId) hash ^= CfgRealmId.GetHashCode();
      if (HasBnetAccountId) hash ^= BnetAccountId.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasRegionId) hash ^= RegionId.GetHashCode();
      if (HasCommunityId) hash ^= CommunityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCharacterId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CharacterId);
      }
      if (HasCfgRealmId) {
        output.WriteRawTag(16);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasBnetAccountId) {
        output.WriteRawTag(24);
        output.WriteUInt64(BnetAccountId);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(32);
        output.WriteUInt64(GameAccountId);
      }
      if (HasRegionId) {
        output.WriteRawTag(40);
        output.WriteInt32(RegionId);
      }
      if (HasCommunityId) {
        output.WriteRawTag(48);
        output.WriteUInt64(CommunityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCharacterId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CharacterId);
      }
      if (HasCfgRealmId) {
        output.WriteRawTag(16);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasBnetAccountId) {
        output.WriteRawTag(24);
        output.WriteUInt64(BnetAccountId);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(32);
        output.WriteUInt64(GameAccountId);
      }
      if (HasRegionId) {
        output.WriteRawTag(40);
        output.WriteInt32(RegionId);
      }
      if (HasCommunityId) {
        output.WriteRawTag(48);
        output.WriteUInt64(CommunityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCharacterId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CharacterId);
      }
      if (HasCfgRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CfgRealmId);
      }
      if (HasBnetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BnetAccountId);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GameAccountId);
      }
      if (HasRegionId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionId);
      }
      if (HasCommunityId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CommunityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterIdentity other) {
      if (other == null) {
        return;
      }
      if (other.HasCharacterId) {
        CharacterId = other.CharacterId;
      }
      if (other.HasCfgRealmId) {
        CfgRealmId = other.CfgRealmId;
      }
      if (other.HasBnetAccountId) {
        BnetAccountId = other.BnetAccountId;
      }
      if (other.HasGameAccountId) {
        GameAccountId = other.GameAccountId;
      }
      if (other.HasRegionId) {
        RegionId = other.RegionId;
      }
      if (other.HasCommunityId) {
        CommunityId = other.CommunityId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CharacterId = input.ReadUInt64();
            break;
          }
          case 16: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 24: {
            BnetAccountId = input.ReadUInt64();
            break;
          }
          case 32: {
            GameAccountId = input.ReadUInt64();
            break;
          }
          case 40: {
            RegionId = input.ReadInt32();
            break;
          }
          case 48: {
            CommunityId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CharacterId = input.ReadUInt64();
            break;
          }
          case 16: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 24: {
            BnetAccountId = input.ReadUInt64();
            break;
          }
          case 32: {
            GameAccountId = input.ReadUInt64();
            break;
          }
          case 40: {
            RegionId = input.ReadInt32();
            break;
          }
          case 48: {
            CommunityId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RealmContext : pb::IMessage<RealmContext>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RealmContext> _parser = new pb::MessageParser<RealmContext>(() => new RealmContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RealmContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RealmContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RealmContext(RealmContext other) : this() {
      nativeRealm_ = other.nativeRealm_ != null ? other.nativeRealm_.Clone() : null;
      virtualRealm_ = other.virtualRealm_ != null ? other.virtualRealm_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RealmContext Clone() {
      return new RealmContext(this);
    }

    /// <summary>Field number for the "native_realm" field.</summary>
    public const int NativeRealmFieldNumber = 1;
    private global::Blizzard.Telemetry.Wow.RealmInfo nativeRealm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.RealmInfo NativeRealm {
      get { return nativeRealm_; }
      set {
        nativeRealm_ = value;
      }
    }

    /// <summary>Field number for the "virtual_realm" field.</summary>
    public const int VirtualRealmFieldNumber = 2;
    private global::Blizzard.Telemetry.Wow.RealmInfo virtualRealm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.RealmInfo VirtualRealm {
      get { return virtualRealm_; }
      set {
        virtualRealm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RealmContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RealmContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NativeRealm, other.NativeRealm)) return false;
      if (!object.Equals(VirtualRealm, other.VirtualRealm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nativeRealm_ != null) hash ^= NativeRealm.GetHashCode();
      if (virtualRealm_ != null) hash ^= VirtualRealm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nativeRealm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NativeRealm);
      }
      if (virtualRealm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VirtualRealm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nativeRealm_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NativeRealm);
      }
      if (virtualRealm_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VirtualRealm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nativeRealm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NativeRealm);
      }
      if (virtualRealm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VirtualRealm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RealmContext other) {
      if (other == null) {
        return;
      }
      if (other.nativeRealm_ != null) {
        if (nativeRealm_ == null) {
          NativeRealm = new global::Blizzard.Telemetry.Wow.RealmInfo();
        }
        NativeRealm.MergeFrom(other.NativeRealm);
      }
      if (other.virtualRealm_ != null) {
        if (virtualRealm_ == null) {
          VirtualRealm = new global::Blizzard.Telemetry.Wow.RealmInfo();
        }
        VirtualRealm.MergeFrom(other.VirtualRealm);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nativeRealm_ == null) {
              NativeRealm = new global::Blizzard.Telemetry.Wow.RealmInfo();
            }
            input.ReadMessage(NativeRealm);
            break;
          }
          case 18: {
            if (virtualRealm_ == null) {
              VirtualRealm = new global::Blizzard.Telemetry.Wow.RealmInfo();
            }
            input.ReadMessage(VirtualRealm);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nativeRealm_ == null) {
              NativeRealm = new global::Blizzard.Telemetry.Wow.RealmInfo();
            }
            input.ReadMessage(NativeRealm);
            break;
          }
          case 18: {
            if (virtualRealm_ == null) {
              VirtualRealm = new global::Blizzard.Telemetry.Wow.RealmInfo();
            }
            input.ReadMessage(VirtualRealm);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RealmInfo : pb::IMessage<RealmInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RealmInfo> _parser = new pb::MessageParser<RealmInfo>(() => new RealmInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RealmInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RealmInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RealmInfo(RealmInfo other) : this() {
      _hasBits0 = other._hasBits0;
      realmRegion_ = other.realmRegion_;
      realmSite_ = other.realmSite_;
      realmId_ = other.realmId_;
      cfgRealmId_ = other.cfgRealmId_;
      realmName_ = other.realmName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RealmInfo Clone() {
      return new RealmInfo(this);
    }

    /// <summary>Field number for the "realm_region" field.</summary>
    public const int RealmRegionFieldNumber = 1;
    private readonly static uint RealmRegionDefaultValue = 0;

    private uint realmRegion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RealmRegion {
      get { if ((_hasBits0 & 1) != 0) { return realmRegion_; } else { return RealmRegionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        realmRegion_ = value;
      }
    }
    /// <summary>Gets whether the "realm_region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmRegion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "realm_region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmRegion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "realm_site" field.</summary>
    public const int RealmSiteFieldNumber = 2;
    private readonly static uint RealmSiteDefaultValue = 0;

    private uint realmSite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RealmSite {
      get { if ((_hasBits0 & 2) != 0) { return realmSite_; } else { return RealmSiteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        realmSite_ = value;
      }
    }
    /// <summary>Gets whether the "realm_site" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmSite {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "realm_site" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmSite() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "realm_id" field.</summary>
    public const int RealmIdFieldNumber = 3;
    private readonly static uint RealmIdDefaultValue = 0;

    private uint realmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RealmId {
      get { if ((_hasBits0 & 4) != 0) { return realmId_; } else { return RealmIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        realmId_ = value;
      }
    }
    /// <summary>Gets whether the "realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "cfg_realm_id" field.</summary>
    public const int CfgRealmIdFieldNumber = 4;
    private readonly static uint CfgRealmIdDefaultValue = 0;

    private uint cfgRealmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CfgRealmId {
      get { if ((_hasBits0 & 8) != 0) { return cfgRealmId_; } else { return CfgRealmIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        cfgRealmId_ = value;
      }
    }
    /// <summary>Gets whether the "cfg_realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfgRealmId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cfg_realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfgRealmId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "realm_name" field.</summary>
    public const int RealmNameFieldNumber = 5;
    private readonly static string RealmNameDefaultValue = "";

    private string realmName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RealmName {
      get { return realmName_ ?? RealmNameDefaultValue; }
      set {
        realmName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "realm_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmName {
      get { return realmName_ != null; }
    }
    /// <summary>Clears the value of the "realm_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmName() {
      realmName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RealmInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RealmInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RealmRegion != other.RealmRegion) return false;
      if (RealmSite != other.RealmSite) return false;
      if (RealmId != other.RealmId) return false;
      if (CfgRealmId != other.CfgRealmId) return false;
      if (RealmName != other.RealmName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRealmRegion) hash ^= RealmRegion.GetHashCode();
      if (HasRealmSite) hash ^= RealmSite.GetHashCode();
      if (HasRealmId) hash ^= RealmId.GetHashCode();
      if (HasCfgRealmId) hash ^= CfgRealmId.GetHashCode();
      if (HasRealmName) hash ^= RealmName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRealmRegion) {
        output.WriteRawTag(8);
        output.WriteUInt32(RealmRegion);
      }
      if (HasRealmSite) {
        output.WriteRawTag(16);
        output.WriteUInt32(RealmSite);
      }
      if (HasRealmId) {
        output.WriteRawTag(24);
        output.WriteUInt32(RealmId);
      }
      if (HasCfgRealmId) {
        output.WriteRawTag(32);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasRealmName) {
        output.WriteRawTag(42);
        output.WriteString(RealmName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRealmRegion) {
        output.WriteRawTag(8);
        output.WriteUInt32(RealmRegion);
      }
      if (HasRealmSite) {
        output.WriteRawTag(16);
        output.WriteUInt32(RealmSite);
      }
      if (HasRealmId) {
        output.WriteRawTag(24);
        output.WriteUInt32(RealmId);
      }
      if (HasCfgRealmId) {
        output.WriteRawTag(32);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasRealmName) {
        output.WriteRawTag(42);
        output.WriteString(RealmName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRealmRegion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RealmRegion);
      }
      if (HasRealmSite) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RealmSite);
      }
      if (HasRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RealmId);
      }
      if (HasCfgRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CfgRealmId);
      }
      if (HasRealmName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RealmName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RealmInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasRealmRegion) {
        RealmRegion = other.RealmRegion;
      }
      if (other.HasRealmSite) {
        RealmSite = other.RealmSite;
      }
      if (other.HasRealmId) {
        RealmId = other.RealmId;
      }
      if (other.HasCfgRealmId) {
        CfgRealmId = other.CfgRealmId;
      }
      if (other.HasRealmName) {
        RealmName = other.RealmName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RealmRegion = input.ReadUInt32();
            break;
          }
          case 16: {
            RealmSite = input.ReadUInt32();
            break;
          }
          case 24: {
            RealmId = input.ReadUInt32();
            break;
          }
          case 32: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 42: {
            RealmName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RealmRegion = input.ReadUInt32();
            break;
          }
          case 16: {
            RealmSite = input.ReadUInt32();
            break;
          }
          case 24: {
            RealmId = input.ReadUInt32();
            break;
          }
          case 32: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 42: {
            RealmName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JamServerSpec : pb::IMessage<JamServerSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JamServerSpec> _parser = new pb::MessageParser<JamServerSpec>(() => new JamServerSpec());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JamServerSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JamServerSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JamServerSpec(JamServerSpec other) : this() {
      _hasBits0 = other._hasBits0;
      realmInfo_ = other.realmInfo_ != null ? other.realmInfo_.Clone() : null;
      serverId_ = other.serverId_;
      serverType_ = other.serverType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JamServerSpec Clone() {
      return new JamServerSpec(this);
    }

    /// <summary>Field number for the "realm_info" field.</summary>
    public const int RealmInfoFieldNumber = 1;
    private global::Blizzard.Telemetry.Wow.RealmInfo realmInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.RealmInfo RealmInfo {
      get { return realmInfo_; }
      set {
        realmInfo_ = value;
      }
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 2;
    private readonly static uint ServerIdDefaultValue = 0;

    private uint serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ServerId {
      get { if ((_hasBits0 & 1) != 0) { return serverId_; } else { return ServerIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        serverId_ = value;
      }
    }
    /// <summary>Gets whether the "server_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "server_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "server_type" field.</summary>
    public const int ServerTypeFieldNumber = 3;
    private readonly static uint ServerTypeDefaultValue = 0;

    private uint serverType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ServerType {
      get { if ((_hasBits0 & 2) != 0) { return serverType_; } else { return ServerTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        serverType_ = value;
      }
    }
    /// <summary>Gets whether the "server_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "server_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JamServerSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JamServerSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RealmInfo, other.RealmInfo)) return false;
      if (ServerId != other.ServerId) return false;
      if (ServerType != other.ServerType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (realmInfo_ != null) hash ^= RealmInfo.GetHashCode();
      if (HasServerId) hash ^= ServerId.GetHashCode();
      if (HasServerType) hash ^= ServerType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (realmInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RealmInfo);
      }
      if (HasServerId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ServerId);
      }
      if (HasServerType) {
        output.WriteRawTag(24);
        output.WriteUInt32(ServerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (realmInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RealmInfo);
      }
      if (HasServerId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ServerId);
      }
      if (HasServerType) {
        output.WriteRawTag(24);
        output.WriteUInt32(ServerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (realmInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RealmInfo);
      }
      if (HasServerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerId);
      }
      if (HasServerType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JamServerSpec other) {
      if (other == null) {
        return;
      }
      if (other.realmInfo_ != null) {
        if (realmInfo_ == null) {
          RealmInfo = new global::Blizzard.Telemetry.Wow.RealmInfo();
        }
        RealmInfo.MergeFrom(other.RealmInfo);
      }
      if (other.HasServerId) {
        ServerId = other.ServerId;
      }
      if (other.HasServerType) {
        ServerType = other.ServerType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (realmInfo_ == null) {
              RealmInfo = new global::Blizzard.Telemetry.Wow.RealmInfo();
            }
            input.ReadMessage(RealmInfo);
            break;
          }
          case 16: {
            ServerId = input.ReadUInt32();
            break;
          }
          case 24: {
            ServerType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (realmInfo_ == null) {
              RealmInfo = new global::Blizzard.Telemetry.Wow.RealmInfo();
            }
            input.ReadMessage(RealmInfo);
            break;
          }
          case 16: {
            ServerId = input.ReadUInt32();
            break;
          }
          case 24: {
            ServerType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapInfo : pb::IMessage<MapInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapInfo> _parser = new pb::MessageParser<MapInfo>(() => new MapInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapInfo(MapInfo other) : this() {
      _hasBits0 = other._hasBits0;
      mapId_ = other.mapId_;
      areaShareId_ = other.areaShareId_;
      instanceId_ = other.instanceId_;
      simulationId_ = other.simulationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapInfo Clone() {
      return new MapInfo(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private readonly static uint MapIdDefaultValue = 0;

    private uint mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { if ((_hasBits0 & 1) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "map_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "map_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "area_share_id" field.</summary>
    public const int AreaShareIdFieldNumber = 2;
    private readonly static uint AreaShareIdDefaultValue = 0;

    private uint areaShareId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AreaShareId {
      get { if ((_hasBits0 & 2) != 0) { return areaShareId_; } else { return AreaShareIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        areaShareId_ = value;
      }
    }
    /// <summary>Gets whether the "area_share_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaShareId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "area_share_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaShareId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private readonly static ulong InstanceIdDefaultValue = 0UL;

    private ulong instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong InstanceId {
      get { if ((_hasBits0 & 4) != 0) { return instanceId_; } else { return InstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        instanceId_ = value;
      }
    }
    /// <summary>Gets whether the "instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstanceId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstanceId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "simulation_id" field.</summary>
    public const int SimulationIdFieldNumber = 4;
    private readonly static ulong SimulationIdDefaultValue = 0UL;

    private ulong simulationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SimulationId {
      get { if ((_hasBits0 & 8) != 0) { return simulationId_; } else { return SimulationIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        simulationId_ = value;
      }
    }
    /// <summary>Gets whether the "simulation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSimulationId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "simulation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSimulationId() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (AreaShareId != other.AreaShareId) return false;
      if (InstanceId != other.InstanceId) return false;
      if (SimulationId != other.SimulationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasAreaShareId) hash ^= AreaShareId.GetHashCode();
      if (HasInstanceId) hash ^= InstanceId.GetHashCode();
      if (HasSimulationId) hash ^= SimulationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMapId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (HasAreaShareId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AreaShareId);
      }
      if (HasInstanceId) {
        output.WriteRawTag(24);
        output.WriteUInt64(InstanceId);
      }
      if (HasSimulationId) {
        output.WriteRawTag(32);
        output.WriteUInt64(SimulationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMapId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (HasAreaShareId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AreaShareId);
      }
      if (HasInstanceId) {
        output.WriteRawTag(24);
        output.WriteUInt64(InstanceId);
      }
      if (HasSimulationId) {
        output.WriteRawTag(32);
        output.WriteUInt64(SimulationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (HasAreaShareId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaShareId);
      }
      if (HasInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InstanceId);
      }
      if (HasSimulationId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SimulationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasAreaShareId) {
        AreaShareId = other.AreaShareId;
      }
      if (other.HasInstanceId) {
        InstanceId = other.InstanceId;
      }
      if (other.HasSimulationId) {
        SimulationId = other.SimulationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            AreaShareId = input.ReadUInt32();
            break;
          }
          case 24: {
            InstanceId = input.ReadUInt64();
            break;
          }
          case 32: {
            SimulationId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            AreaShareId = input.ReadUInt32();
            break;
          }
          case 24: {
            InstanceId = input.ReadUInt64();
            break;
          }
          case 32: {
            SimulationId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WorldPortLoc : pb::IMessage<WorldPortLoc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorldPortLoc> _parser = new pb::MessageParser<WorldPortLoc>(() => new WorldPortLoc());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorldPortLoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldPortLoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldPortLoc(WorldPortLoc other) : this() {
      _hasBits0 = other._hasBits0;
      mapId_ = other.mapId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      areaTableId_ = other.areaTableId_;
      subAreaId_ = other.subAreaId_;
      wmoGroupId_ = other.wmoGroupId_;
      facing_ = other.facing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldPortLoc Clone() {
      return new WorldPortLoc(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private readonly static uint MapIdDefaultValue = 0;

    private uint mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { if ((_hasBits0 & 1) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "map_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "map_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private readonly static float XDefaultValue = 0F;

    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { if ((_hasBits0 & 2) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 2;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private readonly static float YDefaultValue = 0F;

    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { if ((_hasBits0 & 4) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 4;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 4;
    private readonly static float ZDefaultValue = 0F;

    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { if ((_hasBits0 & 8) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 8;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "area_table_id" field.</summary>
    public const int AreaTableIdFieldNumber = 5;
    private readonly static uint AreaTableIdDefaultValue = 0;

    private uint areaTableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AreaTableId {
      get { if ((_hasBits0 & 16) != 0) { return areaTableId_; } else { return AreaTableIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        areaTableId_ = value;
      }
    }
    /// <summary>Gets whether the "area_table_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaTableId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "area_table_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaTableId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sub_area_id" field.</summary>
    public const int SubAreaIdFieldNumber = 6;
    private readonly static uint SubAreaIdDefaultValue = 0;

    private uint subAreaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubAreaId {
      get { if ((_hasBits0 & 32) != 0) { return subAreaId_; } else { return SubAreaIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        subAreaId_ = value;
      }
    }
    /// <summary>Gets whether the "sub_area_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubAreaId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sub_area_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubAreaId() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "wmo_group_id" field.</summary>
    public const int WmoGroupIdFieldNumber = 7;
    private readonly static uint WmoGroupIdDefaultValue = 0;

    private uint wmoGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint WmoGroupId {
      get { if ((_hasBits0 & 64) != 0) { return wmoGroupId_; } else { return WmoGroupIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        wmoGroupId_ = value;
      }
    }
    /// <summary>Gets whether the "wmo_group_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWmoGroupId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "wmo_group_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWmoGroupId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 8;
    private readonly static float FacingDefaultValue = 0F;

    private float facing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Facing {
      get { if ((_hasBits0 & 128) != 0) { return facing_; } else { return FacingDefaultValue; } }
      set {
        _hasBits0 |= 128;
        facing_ = value;
      }
    }
    /// <summary>Gets whether the "facing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFacing {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "facing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFacing() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorldPortLoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorldPortLoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (AreaTableId != other.AreaTableId) return false;
      if (SubAreaId != other.SubAreaId) return false;
      if (WmoGroupId != other.WmoGroupId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Facing, other.Facing)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (HasAreaTableId) hash ^= AreaTableId.GetHashCode();
      if (HasSubAreaId) hash ^= SubAreaId.GetHashCode();
      if (HasWmoGroupId) hash ^= WmoGroupId.GetHashCode();
      if (HasFacing) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Facing);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMapId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (HasX) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (HasAreaTableId) {
        output.WriteRawTag(40);
        output.WriteUInt32(AreaTableId);
      }
      if (HasSubAreaId) {
        output.WriteRawTag(48);
        output.WriteUInt32(SubAreaId);
      }
      if (HasWmoGroupId) {
        output.WriteRawTag(56);
        output.WriteUInt32(WmoGroupId);
      }
      if (HasFacing) {
        output.WriteRawTag(69);
        output.WriteFloat(Facing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMapId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (HasX) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (HasAreaTableId) {
        output.WriteRawTag(40);
        output.WriteUInt32(AreaTableId);
      }
      if (HasSubAreaId) {
        output.WriteRawTag(48);
        output.WriteUInt32(SubAreaId);
      }
      if (HasWmoGroupId) {
        output.WriteRawTag(56);
        output.WriteUInt32(WmoGroupId);
      }
      if (HasFacing) {
        output.WriteRawTag(69);
        output.WriteFloat(Facing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (HasX) {
        size += 1 + 4;
      }
      if (HasY) {
        size += 1 + 4;
      }
      if (HasZ) {
        size += 1 + 4;
      }
      if (HasAreaTableId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaTableId);
      }
      if (HasSubAreaId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubAreaId);
      }
      if (HasWmoGroupId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WmoGroupId);
      }
      if (HasFacing) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorldPortLoc other) {
      if (other == null) {
        return;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      if (other.HasAreaTableId) {
        AreaTableId = other.AreaTableId;
      }
      if (other.HasSubAreaId) {
        SubAreaId = other.SubAreaId;
      }
      if (other.HasWmoGroupId) {
        WmoGroupId = other.WmoGroupId;
      }
      if (other.HasFacing) {
        Facing = other.Facing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 40: {
            AreaTableId = input.ReadUInt32();
            break;
          }
          case 48: {
            SubAreaId = input.ReadUInt32();
            break;
          }
          case 56: {
            WmoGroupId = input.ReadUInt32();
            break;
          }
          case 69: {
            Facing = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 40: {
            AreaTableId = input.ReadUInt32();
            break;
          }
          case 48: {
            SubAreaId = input.ReadUInt32();
            break;
          }
          case 56: {
            WmoGroupId = input.ReadUInt32();
            break;
          }
          case 69: {
            Facing = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BindLocation : pb::IMessage<BindLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BindLocation> _parser = new pb::MessageParser<BindLocation>(() => new BindLocation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BindLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BindLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BindLocation(BindLocation other) : this() {
      _hasBits0 = other._hasBits0;
      mapId_ = other.mapId_;
      areaId_ = other.areaId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BindLocation Clone() {
      return new BindLocation(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private readonly static uint MapIdDefaultValue = 0;

    private uint mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { if ((_hasBits0 & 1) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "map_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "map_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "area_id" field.</summary>
    public const int AreaIdFieldNumber = 2;
    private readonly static uint AreaIdDefaultValue = 0;

    private uint areaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AreaId {
      get { if ((_hasBits0 & 2) != 0) { return areaId_; } else { return AreaIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        areaId_ = value;
      }
    }
    /// <summary>Gets whether the "area_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAreaId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "area_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAreaId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private readonly static float XDefaultValue = 0F;

    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { if ((_hasBits0 & 4) != 0) { return x_; } else { return XDefaultValue; } }
      set {
        _hasBits0 |= 4;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private readonly static float YDefaultValue = 0F;

    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { if ((_hasBits0 & 8) != 0) { return y_; } else { return YDefaultValue; } }
      set {
        _hasBits0 |= 8;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 5;
    private readonly static float ZDefaultValue = 0F;

    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { if ((_hasBits0 & 16) != 0) { return z_; } else { return ZDefaultValue; } }
      set {
        _hasBits0 |= 16;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BindLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BindLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (AreaId != other.AreaId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasAreaId) hash ^= AreaId.GetHashCode();
      if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMapId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (HasAreaId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AreaId);
      }
      if (HasX) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(45);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMapId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MapId);
      }
      if (HasAreaId) {
        output.WriteRawTag(16);
        output.WriteUInt32(AreaId);
      }
      if (HasX) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (HasY) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (HasZ) {
        output.WriteRawTag(45);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (HasAreaId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AreaId);
      }
      if (HasX) {
        size += 1 + 4;
      }
      if (HasY) {
        size += 1 + 4;
      }
      if (HasZ) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BindLocation other) {
      if (other == null) {
        return;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasAreaId) {
        AreaId = other.AreaId;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
          case 45: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadUInt32();
            break;
          }
          case 16: {
            AreaId = input.ReadUInt32();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
          case 45: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AccountInfo : pb::IMessage<AccountInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountInfo(AccountInfo other) : this() {
      _hasBits0 = other._hasBits0;
      bnetAccountId_ = other.bnetAccountId_;
      gameAccountId_ = other.gameAccountId_.Clone();
      region_ = other.region_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "bnet_account_id" field.</summary>
    public const int BnetAccountIdFieldNumber = 1;
    private readonly static ulong BnetAccountIdDefaultValue = 0UL;

    private ulong bnetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BnetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return bnetAccountId_; } else { return BnetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bnetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "bnet_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBnetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bnet_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBnetAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_gameAccountId_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> gameAccountId_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> GameAccountId {
      get { return gameAccountId_; }
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private readonly static uint RegionDefaultValue = 0;

    private uint region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Region {
      get { if ((_hasBits0 & 2) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegion() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BnetAccountId != other.BnetAccountId) return false;
      if(!gameAccountId_.Equals(other.gameAccountId_)) return false;
      if (Region != other.Region) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBnetAccountId) hash ^= BnetAccountId.GetHashCode();
      hash ^= gameAccountId_.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBnetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(BnetAccountId);
      }
      gameAccountId_.WriteTo(output, _repeated_gameAccountId_codec);
      if (HasRegion) {
        output.WriteRawTag(24);
        output.WriteUInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBnetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(BnetAccountId);
      }
      gameAccountId_.WriteTo(ref output, _repeated_gameAccountId_codec);
      if (HasRegion) {
        output.WriteRawTag(24);
        output.WriteUInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBnetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BnetAccountId);
      }
      size += gameAccountId_.CalculateSize(_repeated_gameAccountId_codec);
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasBnetAccountId) {
        BnetAccountId = other.BnetAccountId;
      }
      gameAccountId_.Add(other.gameAccountId_);
      if (other.HasRegion) {
        Region = other.Region;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BnetAccountId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            gameAccountId_.AddEntriesFrom(input, _repeated_gameAccountId_codec);
            break;
          }
          case 24: {
            Region = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BnetAccountId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            gameAccountId_.AddEntriesFrom(ref input, _repeated_gameAccountId_codec);
            break;
          }
          case 24: {
            Region = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PartyInfo : pb::IMessage<PartyInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PartyInfo> _parser = new pb::MessageParser<PartyInfo>(() => new PartyInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PartyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyInfo(PartyInfo other) : this() {
      _hasBits0 = other._hasBits0;
      cfgRealmId_ = other.cfgRealmId_;
      partyId_ = other.partyId_;
      isLeader_ = other.isLeader_;
      isCrossFaction_ = other.isCrossFaction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PartyInfo Clone() {
      return new PartyInfo(this);
    }

    /// <summary>Field number for the "cfg_realm_id" field.</summary>
    public const int CfgRealmIdFieldNumber = 1;
    private readonly static uint CfgRealmIdDefaultValue = 0;

    private uint cfgRealmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CfgRealmId {
      get { if ((_hasBits0 & 1) != 0) { return cfgRealmId_; } else { return CfgRealmIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cfgRealmId_ = value;
      }
    }
    /// <summary>Gets whether the "cfg_realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfgRealmId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cfg_realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfgRealmId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "party_id" field.</summary>
    public const int PartyIdFieldNumber = 2;
    private readonly static ulong PartyIdDefaultValue = 0UL;

    private ulong partyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong PartyId {
      get { if ((_hasBits0 & 2) != 0) { return partyId_; } else { return PartyIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        partyId_ = value;
      }
    }
    /// <summary>Gets whether the "party_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartyId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "party_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartyId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_leader" field.</summary>
    public const int IsLeaderFieldNumber = 3;
    private readonly static bool IsLeaderDefaultValue = false;

    private bool isLeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLeader {
      get { if ((_hasBits0 & 4) != 0) { return isLeader_; } else { return IsLeaderDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isLeader_ = value;
      }
    }
    /// <summary>Gets whether the "is_leader" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsLeader {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_leader" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsLeader() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_cross_faction" field.</summary>
    public const int IsCrossFactionFieldNumber = 4;
    private readonly static bool IsCrossFactionDefaultValue = false;

    private bool isCrossFaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCrossFaction {
      get { if ((_hasBits0 & 8) != 0) { return isCrossFaction_; } else { return IsCrossFactionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isCrossFaction_ = value;
      }
    }
    /// <summary>Gets whether the "is_cross_faction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsCrossFaction {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_cross_faction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsCrossFaction() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PartyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PartyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CfgRealmId != other.CfgRealmId) return false;
      if (PartyId != other.PartyId) return false;
      if (IsLeader != other.IsLeader) return false;
      if (IsCrossFaction != other.IsCrossFaction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCfgRealmId) hash ^= CfgRealmId.GetHashCode();
      if (HasPartyId) hash ^= PartyId.GetHashCode();
      if (HasIsLeader) hash ^= IsLeader.GetHashCode();
      if (HasIsCrossFaction) hash ^= IsCrossFaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCfgRealmId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasPartyId) {
        output.WriteRawTag(16);
        output.WriteUInt64(PartyId);
      }
      if (HasIsLeader) {
        output.WriteRawTag(24);
        output.WriteBool(IsLeader);
      }
      if (HasIsCrossFaction) {
        output.WriteRawTag(32);
        output.WriteBool(IsCrossFaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCfgRealmId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasPartyId) {
        output.WriteRawTag(16);
        output.WriteUInt64(PartyId);
      }
      if (HasIsLeader) {
        output.WriteRawTag(24);
        output.WriteBool(IsLeader);
      }
      if (HasIsCrossFaction) {
        output.WriteRawTag(32);
        output.WriteBool(IsCrossFaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCfgRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CfgRealmId);
      }
      if (HasPartyId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PartyId);
      }
      if (HasIsLeader) {
        size += 1 + 1;
      }
      if (HasIsCrossFaction) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PartyInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasCfgRealmId) {
        CfgRealmId = other.CfgRealmId;
      }
      if (other.HasPartyId) {
        PartyId = other.PartyId;
      }
      if (other.HasIsLeader) {
        IsLeader = other.IsLeader;
      }
      if (other.HasIsCrossFaction) {
        IsCrossFaction = other.IsCrossFaction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 16: {
            PartyId = input.ReadUInt64();
            break;
          }
          case 24: {
            IsLeader = input.ReadBool();
            break;
          }
          case 32: {
            IsCrossFaction = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 16: {
            PartyId = input.ReadUInt64();
            break;
          }
          case 24: {
            IsLeader = input.ReadBool();
            break;
          }
          case 32: {
            IsCrossFaction = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuildInfo : pb::IMessage<GuildInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuildInfo> _parser = new pb::MessageParser<GuildInfo>(() => new GuildInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuildInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuildInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuildInfo(GuildInfo other) : this() {
      _hasBits0 = other._hasBits0;
      cfgRealmId_ = other.cfgRealmId_;
      guildId_ = other.guildId_;
      region_ = other.region_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuildInfo Clone() {
      return new GuildInfo(this);
    }

    /// <summary>Field number for the "cfg_realm_id" field.</summary>
    public const int CfgRealmIdFieldNumber = 1;
    private readonly static uint CfgRealmIdDefaultValue = 0;

    private uint cfgRealmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CfgRealmId {
      get { if ((_hasBits0 & 1) != 0) { return cfgRealmId_; } else { return CfgRealmIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cfgRealmId_ = value;
      }
    }
    /// <summary>Gets whether the "cfg_realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfgRealmId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "cfg_realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfgRealmId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "guild_id" field.</summary>
    public const int GuildIdFieldNumber = 2;
    private readonly static ulong GuildIdDefaultValue = 0UL;

    private ulong guildId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GuildId {
      get { if ((_hasBits0 & 2) != 0) { return guildId_; } else { return GuildIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        guildId_ = value;
      }
    }
    /// <summary>Gets whether the "guild_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuildId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "guild_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuildId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private readonly static uint RegionDefaultValue = 0;

    private uint region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Region {
      get { if ((_hasBits0 & 4) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRegion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRegion() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuildInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuildInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CfgRealmId != other.CfgRealmId) return false;
      if (GuildId != other.GuildId) return false;
      if (Region != other.Region) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCfgRealmId) hash ^= CfgRealmId.GetHashCode();
      if (HasGuildId) hash ^= GuildId.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCfgRealmId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasGuildId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GuildId);
      }
      if (HasRegion) {
        output.WriteRawTag(24);
        output.WriteUInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCfgRealmId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasGuildId) {
        output.WriteRawTag(16);
        output.WriteUInt64(GuildId);
      }
      if (HasRegion) {
        output.WriteRawTag(24);
        output.WriteUInt32(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCfgRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CfgRealmId);
      }
      if (HasGuildId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuildId);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuildInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasCfgRealmId) {
        CfgRealmId = other.CfgRealmId;
      }
      if (other.HasGuildId) {
        GuildId = other.GuildId;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 16: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 24: {
            Region = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 16: {
            GuildId = input.ReadUInt64();
            break;
          }
          case 24: {
            Region = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Cost : pb::IMessage<Cost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Cost> _parser = new pb::MessageParser<Cost>(() => new Cost());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Cost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cost(Cost other) : this() {
      _hasBits0 = other._hasBits0;
      resourcetype_ = other.resourcetype_;
      resourceId_ = other.resourceId_;
      resourceCount_ = other.resourceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Cost Clone() {
      return new Cost(this);
    }

    /// <summary>Field number for the "resourcetype" field.</summary>
    public const int ResourcetypeFieldNumber = 1;
    private readonly static global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType ResourcetypeDefaultValue = global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType.Item;

    private global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType resourcetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType Resourcetype {
      get { if ((_hasBits0 & 1) != 0) { return resourcetype_; } else { return ResourcetypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resourcetype_ = value;
      }
    }
    /// <summary>Gets whether the "resourcetype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResourcetype {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "resourcetype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResourcetype() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 2;
    private readonly static uint ResourceIdDefaultValue = 0;

    private uint resourceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResourceId {
      get { if ((_hasBits0 & 2) != 0) { return resourceId_; } else { return ResourceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        resourceId_ = value;
      }
    }
    /// <summary>Gets whether the "resource_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResourceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "resource_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResourceId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "resource_count" field.</summary>
    public const int ResourceCountFieldNumber = 3;
    private readonly static uint ResourceCountDefaultValue = 0;

    private uint resourceCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResourceCount {
      get { if ((_hasBits0 & 4) != 0) { return resourceCount_; } else { return ResourceCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        resourceCount_ = value;
      }
    }
    /// <summary>Gets whether the "resource_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResourceCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "resource_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResourceCount() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Cost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Cost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Resourcetype != other.Resourcetype) return false;
      if (ResourceId != other.ResourceId) return false;
      if (ResourceCount != other.ResourceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResourcetype) hash ^= Resourcetype.GetHashCode();
      if (HasResourceId) hash ^= ResourceId.GetHashCode();
      if (HasResourceCount) hash ^= ResourceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResourcetype) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Resourcetype);
      }
      if (HasResourceId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResourceId);
      }
      if (HasResourceCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(ResourceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResourcetype) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Resourcetype);
      }
      if (HasResourceId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResourceId);
      }
      if (HasResourceCount) {
        output.WriteRawTag(24);
        output.WriteUInt32(ResourceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResourcetype) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resourcetype);
      }
      if (HasResourceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResourceId);
      }
      if (HasResourceCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResourceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Cost other) {
      if (other == null) {
        return;
      }
      if (other.HasResourcetype) {
        Resourcetype = other.Resourcetype;
      }
      if (other.HasResourceId) {
        ResourceId = other.ResourceId;
      }
      if (other.HasResourceCount) {
        ResourceCount = other.ResourceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Resourcetype = (global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType) input.ReadEnum();
            break;
          }
          case 16: {
            ResourceId = input.ReadUInt32();
            break;
          }
          case 24: {
            ResourceCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Resourcetype = (global::Blizzard.Telemetry.Wow.Cost.Types.ResourceType) input.ReadEnum();
            break;
          }
          case 16: {
            ResourceId = input.ReadUInt32();
            break;
          }
          case 24: {
            ResourceCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Cost message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResourceType {
        [pbr::OriginalName("ITEM")] Item = 0,
        [pbr::OriginalName("CURRENCY")] Currency = 1,
      }

    }
    #endregion

  }

  public sealed partial class InstanceGUID : pb::IMessage<InstanceGUID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstanceGUID> _parser = new pb::MessageParser<InstanceGUID>(() => new InstanceGUID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstanceGUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceGUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceGUID(InstanceGUID other) : this() {
      _hasBits0 = other._hasBits0;
      proxyRealmId_ = other.proxyRealmId_;
      instanceId_ = other.instanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstanceGUID Clone() {
      return new InstanceGUID(this);
    }

    /// <summary>Field number for the "proxy_realm_id" field.</summary>
    public const int ProxyRealmIdFieldNumber = 1;
    private readonly static uint ProxyRealmIdDefaultValue = 0;

    private uint proxyRealmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProxyRealmId {
      get { if ((_hasBits0 & 1) != 0) { return proxyRealmId_; } else { return ProxyRealmIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        proxyRealmId_ = value;
      }
    }
    /// <summary>Gets whether the "proxy_realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProxyRealmId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "proxy_realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProxyRealmId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private readonly static ulong InstanceIdDefaultValue = 0UL;

    private ulong instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong InstanceId {
      get { if ((_hasBits0 & 2) != 0) { return instanceId_; } else { return InstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        instanceId_ = value;
      }
    }
    /// <summary>Gets whether the "instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstanceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstanceId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstanceGUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstanceGUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProxyRealmId != other.ProxyRealmId) return false;
      if (InstanceId != other.InstanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasProxyRealmId) hash ^= ProxyRealmId.GetHashCode();
      if (HasInstanceId) hash ^= InstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasProxyRealmId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProxyRealmId);
      }
      if (HasInstanceId) {
        output.WriteRawTag(16);
        output.WriteUInt64(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasProxyRealmId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProxyRealmId);
      }
      if (HasInstanceId) {
        output.WriteRawTag(16);
        output.WriteUInt64(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasProxyRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProxyRealmId);
      }
      if (HasInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstanceGUID other) {
      if (other == null) {
        return;
      }
      if (other.HasProxyRealmId) {
        ProxyRealmId = other.ProxyRealmId;
      }
      if (other.HasInstanceId) {
        InstanceId = other.InstanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProxyRealmId = input.ReadUInt32();
            break;
          }
          case 16: {
            InstanceId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProxyRealmId = input.ReadUInt32();
            break;
          }
          case 16: {
            InstanceId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRouterGUID : pb::IMessage<UserRouterGUID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRouterGUID> _parser = new pb::MessageParser<UserRouterGUID>(() => new UserRouterGUID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRouterGUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRouterGUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRouterGUID(UserRouterGUID other) : this() {
      _hasBits0 = other._hasBits0;
      realmRecId_ = other.realmRecId_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRouterGUID Clone() {
      return new UserRouterGUID(this);
    }

    /// <summary>Field number for the "realm_rec_id" field.</summary>
    public const int RealmRecIdFieldNumber = 1;
    private readonly static uint RealmRecIdDefaultValue = 0;

    private uint realmRecId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RealmRecId {
      get { if ((_hasBits0 & 1) != 0) { return realmRecId_; } else { return RealmRecIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        realmRecId_ = value;
      }
    }
    /// <summary>Gets whether the "realm_rec_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmRecId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "realm_rec_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmRecId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static ulong IdDefaultValue = 0UL;

    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { if ((_hasBits0 & 2) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRouterGUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRouterGUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RealmRecId != other.RealmRecId) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRealmRecId) hash ^= RealmRecId.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRealmRecId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RealmRecId);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteUInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRealmRecId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RealmRecId);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteUInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRealmRecId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RealmRecId);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRouterGUID other) {
      if (other == null) {
        return;
      }
      if (other.HasRealmRecId) {
        RealmRecId = other.RealmRecId;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RealmRecId = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RealmRecId = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameObjectGUID : pb::IMessage<GameObjectGUID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameObjectGUID> _parser = new pb::MessageParser<GameObjectGUID>(() => new GameObjectGUID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameObjectGUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectGUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectGUID(GameObjectGUID other) : this() {
      _hasBits0 = other._hasBits0;
      objectId_ = other.objectId_;
      cfgRealmId_ = other.cfgRealmId_;
      instanceId_ = other.instanceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameObjectGUID Clone() {
      return new GameObjectGUID(this);
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 1;
    private readonly static uint ObjectIdDefaultValue = 0;

    private uint objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cfg_realm_id" field.</summary>
    public const int CfgRealmIdFieldNumber = 2;
    private readonly static uint CfgRealmIdDefaultValue = 0;

    private uint cfgRealmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CfgRealmId {
      get { if ((_hasBits0 & 2) != 0) { return cfgRealmId_; } else { return CfgRealmIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cfgRealmId_ = value;
      }
    }
    /// <summary>Gets whether the "cfg_realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCfgRealmId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cfg_realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCfgRealmId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private readonly static ulong InstanceIdDefaultValue = 0UL;

    private ulong instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong InstanceId {
      get { if ((_hasBits0 & 4) != 0) { return instanceId_; } else { return InstanceIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        instanceId_ = value;
      }
    }
    /// <summary>Gets whether the "instance_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstanceId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "instance_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstanceId() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameObjectGUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameObjectGUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectId != other.ObjectId) return false;
      if (CfgRealmId != other.CfgRealmId) return false;
      if (InstanceId != other.InstanceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      if (HasCfgRealmId) hash ^= CfgRealmId.GetHashCode();
      if (HasInstanceId) hash ^= InstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasObjectId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (HasCfgRealmId) {
        output.WriteRawTag(16);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasInstanceId) {
        output.WriteRawTag(24);
        output.WriteUInt64(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasObjectId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ObjectId);
      }
      if (HasCfgRealmId) {
        output.WriteRawTag(16);
        output.WriteUInt32(CfgRealmId);
      }
      if (HasInstanceId) {
        output.WriteRawTag(24);
        output.WriteUInt64(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ObjectId);
      }
      if (HasCfgRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CfgRealmId);
      }
      if (HasInstanceId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameObjectGUID other) {
      if (other == null) {
        return;
      }
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      if (other.HasCfgRealmId) {
        CfgRealmId = other.CfgRealmId;
      }
      if (other.HasInstanceId) {
        InstanceId = other.InstanceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 24: {
            InstanceId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ObjectId = input.ReadUInt32();
            break;
          }
          case 16: {
            CfgRealmId = input.ReadUInt32();
            break;
          }
          case 24: {
            InstanceId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScenarioGUID : pb::IMessage<ScenarioGUID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScenarioGUID> _parser = new pb::MessageParser<ScenarioGUID>(() => new ScenarioGUID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScenarioGUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScenarioGUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScenarioGUID(ScenarioGUID other) : this() {
      _hasBits0 = other._hasBits0;
      scenarioId_ = other.scenarioId_;
      mapId_ = other.mapId_;
      realmId_ = other.realmId_;
      serverId_ = other.serverId_;
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScenarioGUID Clone() {
      return new ScenarioGUID(this);
    }

    /// <summary>Field number for the "scenario_id" field.</summary>
    public const int ScenarioIdFieldNumber = 1;
    private readonly static uint ScenarioIdDefaultValue = 0;

    private uint scenarioId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScenarioId {
      get { if ((_hasBits0 & 1) != 0) { return scenarioId_; } else { return ScenarioIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scenarioId_ = value;
      }
    }
    /// <summary>Gets whether the "scenario_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScenarioId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "scenario_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScenarioId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 2;
    private readonly static uint MapIdDefaultValue = 0;

    private uint mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MapId {
      get { if ((_hasBits0 & 2) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "map_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "map_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "realm_id" field.</summary>
    public const int RealmIdFieldNumber = 3;
    private readonly static uint RealmIdDefaultValue = 0;

    private uint realmId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RealmId {
      get { if ((_hasBits0 & 4) != 0) { return realmId_; } else { return RealmIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        realmId_ = value;
      }
    }
    /// <summary>Gets whether the "realm_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "realm_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 4;
    private readonly static uint ServerIdDefaultValue = 0;

    private uint serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ServerId {
      get { if ((_hasBits0 & 8) != 0) { return serverId_; } else { return ServerIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        serverId_ = value;
      }
    }
    /// <summary>Gets whether the "server_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "server_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 5;
    private readonly static ulong UniqueIdDefaultValue = 0UL;

    private ulong uniqueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UniqueId {
      get { if ((_hasBits0 & 16) != 0) { return uniqueId_; } else { return UniqueIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        uniqueId_ = value;
      }
    }
    /// <summary>Gets whether the "unique_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUniqueId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "unique_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUniqueId() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScenarioGUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScenarioGUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScenarioId != other.ScenarioId) return false;
      if (MapId != other.MapId) return false;
      if (RealmId != other.RealmId) return false;
      if (ServerId != other.ServerId) return false;
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScenarioId) hash ^= ScenarioId.GetHashCode();
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasRealmId) hash ^= RealmId.GetHashCode();
      if (HasServerId) hash ^= ServerId.GetHashCode();
      if (HasUniqueId) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScenarioId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ScenarioId);
      }
      if (HasMapId) {
        output.WriteRawTag(16);
        output.WriteUInt32(MapId);
      }
      if (HasRealmId) {
        output.WriteRawTag(24);
        output.WriteUInt32(RealmId);
      }
      if (HasServerId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ServerId);
      }
      if (HasUniqueId) {
        output.WriteRawTag(40);
        output.WriteUInt64(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScenarioId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ScenarioId);
      }
      if (HasMapId) {
        output.WriteRawTag(16);
        output.WriteUInt32(MapId);
      }
      if (HasRealmId) {
        output.WriteRawTag(24);
        output.WriteUInt32(RealmId);
      }
      if (HasServerId) {
        output.WriteRawTag(32);
        output.WriteUInt32(ServerId);
      }
      if (HasUniqueId) {
        output.WriteRawTag(40);
        output.WriteUInt64(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScenarioId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScenarioId);
      }
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MapId);
      }
      if (HasRealmId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RealmId);
      }
      if (HasServerId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerId);
      }
      if (HasUniqueId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScenarioGUID other) {
      if (other == null) {
        return;
      }
      if (other.HasScenarioId) {
        ScenarioId = other.ScenarioId;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasRealmId) {
        RealmId = other.RealmId;
      }
      if (other.HasServerId) {
        ServerId = other.ServerId;
      }
      if (other.HasUniqueId) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScenarioId = input.ReadUInt32();
            break;
          }
          case 16: {
            MapId = input.ReadUInt32();
            break;
          }
          case 24: {
            RealmId = input.ReadUInt32();
            break;
          }
          case 32: {
            ServerId = input.ReadUInt32();
            break;
          }
          case 40: {
            UniqueId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ScenarioId = input.ReadUInt32();
            break;
          }
          case 16: {
            MapId = input.ReadUInt32();
            break;
          }
          case 24: {
            RealmId = input.ReadUInt32();
            break;
          }
          case 32: {
            ServerId = input.ReadUInt32();
            break;
          }
          case 40: {
            UniqueId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WorldTransactionGUID : pb::IMessage<WorldTransactionGUID>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorldTransactionGUID> _parser = new pb::MessageParser<WorldTransactionGUID>(() => new WorldTransactionGUID());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorldTransactionGUID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldTransactionGUID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldTransactionGUID(WorldTransactionGUID other) : this() {
      _hasBits0 = other._hasBits0;
      transactionType_ = other.transactionType_;
      realmRecId_ = other.realmRecId_;
      mapId_ = other.mapId_;
      serverId_ = other.serverId_;
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorldTransactionGUID Clone() {
      return new WorldTransactionGUID(this);
    }

    /// <summary>Field number for the "transaction_type" field.</summary>
    public const int TransactionTypeFieldNumber = 1;
    private readonly static uint TransactionTypeDefaultValue = 0;

    private uint transactionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TransactionType {
      get { if ((_hasBits0 & 1) != 0) { return transactionType_; } else { return TransactionTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        transactionType_ = value;
      }
    }
    /// <summary>Gets whether the "transaction_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTransactionType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "transaction_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransactionType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "realm_rec_id" field.</summary>
    public const int RealmRecIdFieldNumber = 2;
    private readonly static uint RealmRecIdDefaultValue = 0;

    private uint realmRecId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RealmRecId {
      get { if ((_hasBits0 & 2) != 0) { return realmRecId_; } else { return RealmRecIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        realmRecId_ = value;
      }
    }
    /// <summary>Gets whether the "realm_rec_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRealmRecId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "realm_rec_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRealmRecId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 3;
    private readonly static int MapIdDefaultValue = 0;

    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { if ((_hasBits0 & 4) != 0) { return mapId_; } else { return MapIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "map_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "map_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 4;
    private readonly static int ServerIdDefaultValue = 0;

    private int serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ServerId {
      get { if ((_hasBits0 & 8) != 0) { return serverId_; } else { return ServerIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        serverId_ = value;
      }
    }
    /// <summary>Gets whether the "server_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "server_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 5;
    private readonly static ulong TransactionIdDefaultValue = 0UL;

    private ulong transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TransactionId {
      get { if ((_hasBits0 & 16) != 0) { return transactionId_; } else { return TransactionIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        transactionId_ = value;
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTransactionId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransactionId() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorldTransactionGUID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorldTransactionGUID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionType != other.TransactionType) return false;
      if (RealmRecId != other.RealmRecId) return false;
      if (MapId != other.MapId) return false;
      if (ServerId != other.ServerId) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTransactionType) hash ^= TransactionType.GetHashCode();
      if (HasRealmRecId) hash ^= RealmRecId.GetHashCode();
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasServerId) hash ^= ServerId.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTransactionType) {
        output.WriteRawTag(8);
        output.WriteUInt32(TransactionType);
      }
      if (HasRealmRecId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RealmRecId);
      }
      if (HasMapId) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (HasServerId) {
        output.WriteRawTag(32);
        output.WriteInt32(ServerId);
      }
      if (HasTransactionId) {
        output.WriteRawTag(40);
        output.WriteUInt64(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTransactionType) {
        output.WriteRawTag(8);
        output.WriteUInt32(TransactionType);
      }
      if (HasRealmRecId) {
        output.WriteRawTag(16);
        output.WriteUInt32(RealmRecId);
      }
      if (HasMapId) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (HasServerId) {
        output.WriteRawTag(32);
        output.WriteInt32(ServerId);
      }
      if (HasTransactionId) {
        output.WriteRawTag(40);
        output.WriteUInt64(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTransactionType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TransactionType);
      }
      if (HasRealmRecId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RealmRecId);
      }
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (HasServerId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorldTransactionGUID other) {
      if (other == null) {
        return;
      }
      if (other.HasTransactionType) {
        TransactionType = other.TransactionType;
      }
      if (other.HasRealmRecId) {
        RealmRecId = other.RealmRecId;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasServerId) {
        ServerId = other.ServerId;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TransactionType = input.ReadUInt32();
            break;
          }
          case 16: {
            RealmRecId = input.ReadUInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            ServerId = input.ReadInt32();
            break;
          }
          case 40: {
            TransactionId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TransactionType = input.ReadUInt32();
            break;
          }
          case 16: {
            RealmRecId = input.ReadUInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            ServerId = input.ReadInt32();
            break;
          }
          case 40: {
            TransactionId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FileLocation : pb::IMessage<FileLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileLocation> _parser = new pb::MessageParser<FileLocation>(() => new FileLocation());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FileLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileLocation(FileLocation other) : this() {
      _hasBits0 = other._hasBits0;
      sourceName_ = other.sourceName_;
      eventName_ = other.eventName_;
      fileName_ = other.fileName_;
      lineNumber_ = other.lineNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileLocation Clone() {
      return new FileLocation(this);
    }

    /// <summary>Field number for the "source_name" field.</summary>
    public const int SourceNameFieldNumber = 1;
    private readonly static string SourceNameDefaultValue = "";

    private string sourceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SourceName {
      get { return sourceName_ ?? SourceNameDefaultValue; }
      set {
        sourceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceName {
      get { return sourceName_ != null; }
    }
    /// <summary>Clears the value of the "source_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceName() {
      sourceName_ = null;
    }

    /// <summary>Field number for the "event_name" field.</summary>
    public const int EventNameFieldNumber = 2;
    private readonly static string EventNameDefaultValue = "";

    private string eventName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventName {
      get { return eventName_ ?? EventNameDefaultValue; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "event_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEventName {
      get { return eventName_ != null; }
    }
    /// <summary>Clears the value of the "event_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEventName() {
      eventName_ = null;
    }

    /// <summary>Field number for the "file_name" field.</summary>
    public const int FileNameFieldNumber = 3;
    private readonly static string FileNameDefaultValue = "";

    private string fileName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileName {
      get { return fileName_ ?? FileNameDefaultValue; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "file_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFileName {
      get { return fileName_ != null; }
    }
    /// <summary>Clears the value of the "file_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFileName() {
      fileName_ = null;
    }

    /// <summary>Field number for the "line_number" field.</summary>
    public const int LineNumberFieldNumber = 4;
    private readonly static int LineNumberDefaultValue = 0;

    private int lineNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LineNumber {
      get { if ((_hasBits0 & 1) != 0) { return lineNumber_; } else { return LineNumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lineNumber_ = value;
      }
    }
    /// <summary>Gets whether the "line_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "line_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineNumber() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FileLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FileLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceName != other.SourceName) return false;
      if (EventName != other.EventName) return false;
      if (FileName != other.FileName) return false;
      if (LineNumber != other.LineNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSourceName) hash ^= SourceName.GetHashCode();
      if (HasEventName) hash ^= EventName.GetHashCode();
      if (HasFileName) hash ^= FileName.GetHashCode();
      if (HasLineNumber) hash ^= LineNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSourceName) {
        output.WriteRawTag(10);
        output.WriteString(SourceName);
      }
      if (HasEventName) {
        output.WriteRawTag(18);
        output.WriteString(EventName);
      }
      if (HasFileName) {
        output.WriteRawTag(26);
        output.WriteString(FileName);
      }
      if (HasLineNumber) {
        output.WriteRawTag(32);
        output.WriteInt32(LineNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSourceName) {
        output.WriteRawTag(10);
        output.WriteString(SourceName);
      }
      if (HasEventName) {
        output.WriteRawTag(18);
        output.WriteString(EventName);
      }
      if (HasFileName) {
        output.WriteRawTag(26);
        output.WriteString(FileName);
      }
      if (HasLineNumber) {
        output.WriteRawTag(32);
        output.WriteInt32(LineNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSourceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceName);
      }
      if (HasEventName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (HasFileName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (HasLineNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LineNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FileLocation other) {
      if (other == null) {
        return;
      }
      if (other.HasSourceName) {
        SourceName = other.SourceName;
      }
      if (other.HasEventName) {
        EventName = other.EventName;
      }
      if (other.HasFileName) {
        FileName = other.FileName;
      }
      if (other.HasLineNumber) {
        LineNumber = other.LineNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceName = input.ReadString();
            break;
          }
          case 18: {
            EventName = input.ReadString();
            break;
          }
          case 26: {
            FileName = input.ReadString();
            break;
          }
          case 32: {
            LineNumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SourceName = input.ReadString();
            break;
          }
          case 18: {
            EventName = input.ReadString();
            break;
          }
          case 26: {
            FileName = input.ReadString();
            break;
          }
          case 32: {
            LineNumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Talent : pb::IMessage<Talent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Talent> _parser = new pb::MessageParser<Talent>(() => new Talent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Talent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Talent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Talent(Talent other) : this() {
      _hasBits0 = other._hasBits0;
      talentId_ = other.talentId_;
      rank_ = other.rank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Talent Clone() {
      return new Talent(this);
    }

    /// <summary>Field number for the "talent_id" field.</summary>
    public const int TalentIdFieldNumber = 1;
    private readonly static uint TalentIdDefaultValue = 0;

    private uint talentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TalentId {
      get { if ((_hasBits0 & 1) != 0) { return talentId_; } else { return TalentIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        talentId_ = value;
      }
    }
    /// <summary>Gets whether the "talent_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTalentId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "talent_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTalentId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 2;
    private readonly static uint RankDefaultValue = 0;

    private uint rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Rank {
      get { if ((_hasBits0 & 2) != 0) { return rank_; } else { return RankDefaultValue; } }
      set {
        _hasBits0 |= 2;
        rank_ = value;
      }
    }
    /// <summary>Gets whether the "rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRank {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRank() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Talent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Talent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalentId != other.TalentId) return false;
      if (Rank != other.Rank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTalentId) hash ^= TalentId.GetHashCode();
      if (HasRank) hash ^= Rank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTalentId) {
        output.WriteRawTag(8);
        output.WriteUInt32(TalentId);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTalentId) {
        output.WriteRawTag(8);
        output.WriteUInt32(TalentId);
      }
      if (HasRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTalentId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TalentId);
      }
      if (HasRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Talent other) {
      if (other == null) {
        return;
      }
      if (other.HasTalentId) {
        TalentId = other.TalentId;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TalentId = input.ReadUInt32();
            break;
          }
          case 16: {
            Rank = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TalentId = input.ReadUInt32();
            break;
          }
          case 16: {
            Rank = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Glyph : pb::IMessage<Glyph>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Glyph> _parser = new pb::MessageParser<Glyph>(() => new Glyph());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Glyph> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Glyph() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Glyph(Glyph other) : this() {
      _hasBits0 = other._hasBits0;
      glyphId_ = other.glyphId_;
      spellId_ = other.spellId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Glyph Clone() {
      return new Glyph(this);
    }

    /// <summary>Field number for the "glyph_id" field.</summary>
    public const int GlyphIdFieldNumber = 1;
    private readonly static uint GlyphIdDefaultValue = 0;

    private uint glyphId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GlyphId {
      get { if ((_hasBits0 & 1) != 0) { return glyphId_; } else { return GlyphIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        glyphId_ = value;
      }
    }
    /// <summary>Gets whether the "glyph_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGlyphId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "glyph_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGlyphId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 2;
    private readonly static int SpellIdDefaultValue = 0;

    private int spellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpellId {
      get { if ((_hasBits0 & 2) != 0) { return spellId_; } else { return SpellIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        spellId_ = value;
      }
    }
    /// <summary>Gets whether the "spell_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpellId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "spell_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpellId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Glyph);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Glyph other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GlyphId != other.GlyphId) return false;
      if (SpellId != other.SpellId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGlyphId) hash ^= GlyphId.GetHashCode();
      if (HasSpellId) hash ^= SpellId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGlyphId) {
        output.WriteRawTag(8);
        output.WriteUInt32(GlyphId);
      }
      if (HasSpellId) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGlyphId) {
        output.WriteRawTag(8);
        output.WriteUInt32(GlyphId);
      }
      if (HasSpellId) {
        output.WriteRawTag(16);
        output.WriteInt32(SpellId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasGlyphId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GlyphId);
      }
      if (HasSpellId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Glyph other) {
      if (other == null) {
        return;
      }
      if (other.HasGlyphId) {
        GlyphId = other.GlyphId;
      }
      if (other.HasSpellId) {
        SpellId = other.SpellId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GlyphId = input.ReadUInt32();
            break;
          }
          case 16: {
            SpellId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GlyphId = input.ReadUInt32();
            break;
          }
          case 16: {
            SpellId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemEnchantment : pb::IMessage<ItemEnchantment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemEnchantment> _parser = new pb::MessageParser<ItemEnchantment>(() => new ItemEnchantment());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemEnchantment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemEnchantment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemEnchantment(ItemEnchantment other) : this() {
      _hasBits0 = other._hasBits0;
      slot_ = other.slot_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemEnchantment Clone() {
      return new ItemEnchantment(this);
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 1;
    private readonly static uint SlotDefaultValue = 0;

    private uint slot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Slot {
      get { if ((_hasBits0 & 1) != 0) { return slot_; } else { return SlotDefaultValue; } }
      set {
        _hasBits0 |= 1;
        slot_ = value;
      }
    }
    /// <summary>Gets whether the "slot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSlot {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "slot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSlot() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 2) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemEnchantment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemEnchantment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Slot != other.Slot) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSlot) hash ^= Slot.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSlot) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slot);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSlot) {
        output.WriteRawTag(8);
        output.WriteUInt32(Slot);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSlot) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Slot);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemEnchantment other) {
      if (other == null) {
        return;
      }
      if (other.HasSlot) {
        Slot = other.Slot;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Slot = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Slot = input.ReadUInt32();
            break;
          }
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemSocketedGem : pb::IMessage<ItemSocketedGem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemSocketedGem> _parser = new pb::MessageParser<ItemSocketedGem>(() => new ItemSocketedGem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemSocketedGem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSocketedGem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSocketedGem(ItemSocketedGem other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_;
      itemId_ = other.itemId_;
      context_ = other.context_;
      bonusListIds_ = other.bonusListIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemSocketedGem Clone() {
      return new ItemSocketedGem(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private readonly static uint SocketDefaultValue = 0;

    private uint socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Socket {
      get { if ((_hasBits0 & 1) != 0) { return socket_; } else { return SocketDefaultValue; } }
      set {
        _hasBits0 |= 1;
        socket_ = value;
      }
    }
    /// <summary>Gets whether the "socket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSocket {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "socket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSocket() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static uint ItemIdDefaultValue = 0;

    private uint itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private readonly static uint ContextDefaultValue = 0;

    private uint context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Context {
      get { if ((_hasBits0 & 4) != 0) { return context_; } else { return ContextDefaultValue; } }
      set {
        _hasBits0 |= 4;
        context_ = value;
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContext {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContext() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "bonus_list_ids" field.</summary>
    public const int BonusListIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_bonusListIds_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> bonusListIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> BonusListIds {
      get { return bonusListIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemSocketedGem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemSocketedGem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Socket != other.Socket) return false;
      if (ItemId != other.ItemId) return false;
      if (Context != other.Context) return false;
      if(!bonusListIds_.Equals(other.bonusListIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSocket) hash ^= Socket.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      hash ^= bonusListIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSocket) {
        output.WriteRawTag(8);
        output.WriteUInt32(Socket);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemId);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt32(Context);
      }
      bonusListIds_.WriteTo(output, _repeated_bonusListIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSocket) {
        output.WriteRawTag(8);
        output.WriteUInt32(Socket);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemId);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt32(Context);
      }
      bonusListIds_.WriteTo(ref output, _repeated_bonusListIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSocket) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Socket);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Context);
      }
      size += bonusListIds_.CalculateSize(_repeated_bonusListIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemSocketedGem other) {
      if (other == null) {
        return;
      }
      if (other.HasSocket) {
        Socket = other.Socket;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasContext) {
        Context = other.Context;
      }
      bonusListIds_.Add(other.bonusListIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Socket = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt32();
            break;
          }
          case 24: {
            Context = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            bonusListIds_.AddEntriesFrom(input, _repeated_bonusListIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Socket = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt32();
            break;
          }
          case 24: {
            Context = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            bonusListIds_.AddEntriesFrom(ref input, _repeated_bonusListIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Loot : pb::IMessage<Loot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Loot> _parser = new pb::MessageParser<Loot>(() => new Loot());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Loot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Loot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Loot(Loot other) : this() {
      _hasBits0 = other._hasBits0;
      lootId_ = other.lootId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Loot Clone() {
      return new Loot(this);
    }

    /// <summary>Field number for the "loot_id" field.</summary>
    public const int LootIdFieldNumber = 1;
    private readonly static ulong LootIdDefaultValue = 0UL;

    private ulong lootId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LootId {
      get { if ((_hasBits0 & 1) != 0) { return lootId_; } else { return LootIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lootId_ = value;
      }
    }
    /// <summary>Gets whether the "loot_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLootId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "loot_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLootId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Loot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Loot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LootId != other.LootId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLootId) hash ^= LootId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLootId) {
        output.WriteRawTag(8);
        output.WriteUInt64(LootId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLootId) {
        output.WriteRawTag(8);
        output.WriteUInt64(LootId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLootId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LootId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Loot other) {
      if (other == null) {
        return;
      }
      if (other.HasLootId) {
        LootId = other.LootId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LootId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LootId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MentorshipStatus : pb::IMessage<MentorshipStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MentorshipStatus> _parser = new pb::MessageParser<MentorshipStatus>(() => new MentorshipStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MentorshipStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MentorshipStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MentorshipStatus(MentorshipStatus other) : this() {
      _hasBits0 = other._hasBits0;
      isGuide_ = other.isGuide_;
      isNewcomer_ = other.isNewcomer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MentorshipStatus Clone() {
      return new MentorshipStatus(this);
    }

    /// <summary>Field number for the "is_guide" field.</summary>
    public const int IsGuideFieldNumber = 1;
    private readonly static bool IsGuideDefaultValue = false;

    private bool isGuide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGuide {
      get { if ((_hasBits0 & 1) != 0) { return isGuide_; } else { return IsGuideDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isGuide_ = value;
      }
    }
    /// <summary>Gets whether the "is_guide" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsGuide {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_guide" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsGuide() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_newcomer" field.</summary>
    public const int IsNewcomerFieldNumber = 2;
    private readonly static bool IsNewcomerDefaultValue = false;

    private bool isNewcomer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNewcomer {
      get { if ((_hasBits0 & 2) != 0) { return isNewcomer_; } else { return IsNewcomerDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isNewcomer_ = value;
      }
    }
    /// <summary>Gets whether the "is_newcomer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsNewcomer {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_newcomer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsNewcomer() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MentorshipStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MentorshipStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsGuide != other.IsGuide) return false;
      if (IsNewcomer != other.IsNewcomer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsGuide) hash ^= IsGuide.GetHashCode();
      if (HasIsNewcomer) hash ^= IsNewcomer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsGuide) {
        output.WriteRawTag(8);
        output.WriteBool(IsGuide);
      }
      if (HasIsNewcomer) {
        output.WriteRawTag(16);
        output.WriteBool(IsNewcomer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsGuide) {
        output.WriteRawTag(8);
        output.WriteBool(IsGuide);
      }
      if (HasIsNewcomer) {
        output.WriteRawTag(16);
        output.WriteBool(IsNewcomer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsGuide) {
        size += 1 + 1;
      }
      if (HasIsNewcomer) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MentorshipStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasIsGuide) {
        IsGuide = other.IsGuide;
      }
      if (other.HasIsNewcomer) {
        IsNewcomer = other.IsNewcomer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsGuide = input.ReadBool();
            break;
          }
          case 16: {
            IsNewcomer = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsGuide = input.ReadBool();
            break;
          }
          case 16: {
            IsNewcomer = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Stat : pb::IMessage<Stat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Stat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat(Stat other) : this() {
      _hasBits0 = other._hasBits0;
      statId_ = other.statId_;
      statValue_ = other.statValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Stat Clone() {
      return new Stat(this);
    }

    /// <summary>Field number for the "stat_id" field.</summary>
    public const int StatIdFieldNumber = 1;
    private readonly static uint StatIdDefaultValue = 0;

    private uint statId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StatId {
      get { if ((_hasBits0 & 1) != 0) { return statId_; } else { return StatIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        statId_ = value;
      }
    }
    /// <summary>Gets whether the "stat_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "stat_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stat_value" field.</summary>
    public const int StatValueFieldNumber = 2;
    private readonly static uint StatValueDefaultValue = 0;

    private uint statValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StatValue {
      get { if ((_hasBits0 & 2) != 0) { return statValue_; } else { return StatValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        statValue_ = value;
      }
    }
    /// <summary>Gets whether the "stat_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stat_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Stat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Stat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatId != other.StatId) return false;
      if (StatValue != other.StatValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStatId) hash ^= StatId.GetHashCode();
      if (HasStatValue) hash ^= StatValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStatId) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatId);
      }
      if (HasStatValue) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStatId) {
        output.WriteRawTag(8);
        output.WriteUInt32(StatId);
      }
      if (HasStatValue) {
        output.WriteRawTag(16);
        output.WriteUInt32(StatValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStatId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatId);
      }
      if (HasStatValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Stat other) {
      if (other == null) {
        return;
      }
      if (other.HasStatId) {
        StatId = other.StatId;
      }
      if (other.HasStatValue) {
        StatValue = other.StatValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatId = input.ReadUInt32();
            break;
          }
          case 16: {
            StatValue = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StatId = input.ReadUInt32();
            break;
          }
          case 16: {
            StatValue = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CurrencyData : pb::IMessage<CurrencyData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurrencyData> _parser = new pb::MessageParser<CurrencyData>(() => new CurrencyData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CurrencyData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyData(CurrencyData other) : this() {
      _hasBits0 = other._hasBits0;
      currencyType_ = other.currencyType_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyData Clone() {
      return new CurrencyData(this);
    }

    /// <summary>Field number for the "currency_type" field.</summary>
    public const int CurrencyTypeFieldNumber = 1;
    private readonly static uint CurrencyTypeDefaultValue = 0;

    private uint currencyType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurrencyType {
      get { if ((_hasBits0 & 1) != 0) { return currencyType_; } else { return CurrencyTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        currencyType_ = value;
      }
    }
    /// <summary>Gets whether the "currency_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrencyType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "currency_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrencyType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private readonly static uint QuantityDefaultValue = 0;

    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Quantity {
      get { if ((_hasBits0 & 2) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuantity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuantity() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CurrencyData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CurrencyData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyType != other.CurrencyType) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCurrencyType) hash ^= CurrencyType.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCurrencyType) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurrencyType);
      }
      if (HasQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCurrencyType) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurrencyType);
      }
      if (HasQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCurrencyType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrencyType);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CurrencyData other) {
      if (other == null) {
        return;
      }
      if (other.HasCurrencyType) {
        CurrencyType = other.CurrencyType;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrencyType = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrencyType = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QuestLogData : pb::IMessage<QuestLogData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QuestLogData> _parser = new pb::MessageParser<QuestLogData>(() => new QuestLogData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QuestLogData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestLogData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestLogData(QuestLogData other) : this() {
      _hasBits0 = other._hasBits0;
      questId_ = other.questId_;
      acceptTimestamp_ = other.acceptTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QuestLogData Clone() {
      return new QuestLogData(this);
    }

    /// <summary>Field number for the "quest_id" field.</summary>
    public const int QuestIdFieldNumber = 1;
    private readonly static uint QuestIdDefaultValue = 0;

    private uint questId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QuestId {
      get { if ((_hasBits0 & 1) != 0) { return questId_; } else { return QuestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        questId_ = value;
      }
    }
    /// <summary>Gets whether the "quest_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quest_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "accept_timestamp" field.</summary>
    public const int AcceptTimestampFieldNumber = 2;
    private readonly static ulong AcceptTimestampDefaultValue = 0UL;

    private ulong acceptTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AcceptTimestamp {
      get { if ((_hasBits0 & 2) != 0) { return acceptTimestamp_; } else { return AcceptTimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        acceptTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "accept_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAcceptTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "accept_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAcceptTimestamp() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QuestLogData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QuestLogData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestId != other.QuestId) return false;
      if (AcceptTimestamp != other.AcceptTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasQuestId) hash ^= QuestId.GetHashCode();
      if (HasAcceptTimestamp) hash ^= AcceptTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasQuestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(QuestId);
      }
      if (HasAcceptTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(AcceptTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasQuestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(QuestId);
      }
      if (HasAcceptTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(AcceptTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasQuestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestId);
      }
      if (HasAcceptTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AcceptTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QuestLogData other) {
      if (other == null) {
        return;
      }
      if (other.HasQuestId) {
        QuestId = other.QuestId;
      }
      if (other.HasAcceptTimestamp) {
        AcceptTimestamp = other.AcceptTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestId = input.ReadUInt32();
            break;
          }
          case 16: {
            AcceptTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestId = input.ReadUInt32();
            break;
          }
          case 16: {
            AcceptTimestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EarnedAchievement : pb::IMessage<EarnedAchievement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EarnedAchievement> _parser = new pb::MessageParser<EarnedAchievement>(() => new EarnedAchievement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EarnedAchievement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarnedAchievement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarnedAchievement(EarnedAchievement other) : this() {
      _hasBits0 = other._hasBits0;
      achievementId_ = other.achievementId_;
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EarnedAchievement Clone() {
      return new EarnedAchievement(this);
    }

    /// <summary>Field number for the "achievement_id" field.</summary>
    public const int AchievementIdFieldNumber = 1;
    private readonly static int AchievementIdDefaultValue = 0;

    private int achievementId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AchievementId {
      get { if ((_hasBits0 & 1) != 0) { return achievementId_; } else { return AchievementIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        achievementId_ = value;
      }
    }
    /// <summary>Gets whether the "achievement_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAchievementId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "achievement_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAchievementId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private readonly static ulong TimestampDefaultValue = 0UL;

    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EarnedAchievement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EarnedAchievement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AchievementId != other.AchievementId) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAchievementId) hash ^= AchievementId.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAchievementId) {
        output.WriteRawTag(8);
        output.WriteInt32(AchievementId);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAchievementId) {
        output.WriteRawTag(8);
        output.WriteInt32(AchievementId);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteUInt64(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAchievementId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AchievementId);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EarnedAchievement other) {
      if (other == null) {
        return;
      }
      if (other.HasAchievementId) {
        AchievementId = other.AchievementId;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AchievementId = input.ReadInt32();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AchievementId = input.ReadInt32();
            break;
          }
          case 16: {
            Timestamp = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemLite : pb::IMessage<ItemLite>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemLite> _parser = new pb::MessageParser<ItemLite>(() => new ItemLite());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ItemLite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLite(ItemLite other) : this() {
      _hasBits0 = other._hasBits0;
      cId_ = other.cId_;
      cQuantity_ = other.cQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ItemLite Clone() {
      return new ItemLite(this);
    }

    /// <summary>Field number for the "c_id" field.</summary>
    public const int CIdFieldNumber = 1;
    private readonly static uint CIdDefaultValue = 0;

    private uint cId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CId {
      get { if ((_hasBits0 & 1) != 0) { return cId_; } else { return CIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cId_ = value;
      }
    }
    /// <summary>Gets whether the "c_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "c_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "c_quantity" field.</summary>
    public const int CQuantityFieldNumber = 2;
    private readonly static uint CQuantityDefaultValue = 0;

    private uint cQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CQuantity {
      get { if ((_hasBits0 & 2) != 0) { return cQuantity_; } else { return CQuantityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cQuantity_ = value;
      }
    }
    /// <summary>Gets whether the "c_quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCQuantity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "c_quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCQuantity() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ItemLite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ItemLite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CId != other.CId) return false;
      if (CQuantity != other.CQuantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCId) hash ^= CId.GetHashCode();
      if (HasCQuantity) hash ^= CQuantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CId);
      }
      if (HasCQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(CQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CId);
      }
      if (HasCQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(CQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CId);
      }
      if (HasCQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CQuantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ItemLite other) {
      if (other == null) {
        return;
      }
      if (other.HasCId) {
        CId = other.CId;
      }
      if (other.HasCQuantity) {
        CQuantity = other.CQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CId = input.ReadUInt32();
            break;
          }
          case 16: {
            CQuantity = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CId = input.ReadUInt32();
            break;
          }
          case 16: {
            CQuantity = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CurrencyLite : pb::IMessage<CurrencyLite>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurrencyLite> _parser = new pb::MessageParser<CurrencyLite>(() => new CurrencyLite());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CurrencyLite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyLite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyLite(CurrencyLite other) : this() {
      _hasBits0 = other._hasBits0;
      cId_ = other.cId_;
      cQuantity_ = other.cQuantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyLite Clone() {
      return new CurrencyLite(this);
    }

    /// <summary>Field number for the "c_id" field.</summary>
    public const int CIdFieldNumber = 1;
    private readonly static uint CIdDefaultValue = 0;

    private uint cId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CId {
      get { if ((_hasBits0 & 1) != 0) { return cId_; } else { return CIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        cId_ = value;
      }
    }
    /// <summary>Gets whether the "c_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "c_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "c_quantity" field.</summary>
    public const int CQuantityFieldNumber = 2;
    private readonly static uint CQuantityDefaultValue = 0;

    private uint cQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CQuantity {
      get { if ((_hasBits0 & 2) != 0) { return cQuantity_; } else { return CQuantityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cQuantity_ = value;
      }
    }
    /// <summary>Gets whether the "c_quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCQuantity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "c_quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCQuantity() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CurrencyLite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CurrencyLite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CId != other.CId) return false;
      if (CQuantity != other.CQuantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCId) hash ^= CId.GetHashCode();
      if (HasCQuantity) hash ^= CQuantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CId);
      }
      if (HasCQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(CQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCId) {
        output.WriteRawTag(8);
        output.WriteUInt32(CId);
      }
      if (HasCQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(CQuantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CId);
      }
      if (HasCQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CQuantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CurrencyLite other) {
      if (other == null) {
        return;
      }
      if (other.HasCId) {
        CId = other.CId;
      }
      if (other.HasCQuantity) {
        CQuantity = other.CQuantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CId = input.ReadUInt32();
            break;
          }
          case 16: {
            CQuantity = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CId = input.ReadUInt32();
            break;
          }
          case 16: {
            CQuantity = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TraitEntry : pb::IMessage<TraitEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TraitEntry> _parser = new pb::MessageParser<TraitEntry>(() => new TraitEntry());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TraitEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraitEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraitEntry(TraitEntry other) : this() {
      _hasBits0 = other._hasBits0;
      nodeId_ = other.nodeId_;
      entryId_ = other.entryId_;
      purchasedRanks_ = other.purchasedRanks_;
      grantedRanks_ = other.grantedRanks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraitEntry Clone() {
      return new TraitEntry(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private readonly static int NodeIdDefaultValue = 0;

    private int nodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NodeId {
      get { if ((_hasBits0 & 1) != 0) { return nodeId_; } else { return NodeIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        nodeId_ = value;
      }
    }
    /// <summary>Gets whether the "node_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNodeId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "node_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNodeId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "entry_id" field.</summary>
    public const int EntryIdFieldNumber = 2;
    private readonly static int EntryIdDefaultValue = 0;

    private int entryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EntryId {
      get { if ((_hasBits0 & 2) != 0) { return entryId_; } else { return EntryIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        entryId_ = value;
      }
    }
    /// <summary>Gets whether the "entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEntryId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntryId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "purchased_ranks" field.</summary>
    public const int PurchasedRanksFieldNumber = 3;
    private readonly static int PurchasedRanksDefaultValue = 0;

    private int purchasedRanks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PurchasedRanks {
      get { if ((_hasBits0 & 4) != 0) { return purchasedRanks_; } else { return PurchasedRanksDefaultValue; } }
      set {
        _hasBits0 |= 4;
        purchasedRanks_ = value;
      }
    }
    /// <summary>Gets whether the "purchased_ranks" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPurchasedRanks {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "purchased_ranks" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPurchasedRanks() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "granted_ranks" field.</summary>
    public const int GrantedRanksFieldNumber = 4;
    private readonly static int GrantedRanksDefaultValue = 0;

    private int grantedRanks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GrantedRanks {
      get { if ((_hasBits0 & 8) != 0) { return grantedRanks_; } else { return GrantedRanksDefaultValue; } }
      set {
        _hasBits0 |= 8;
        grantedRanks_ = value;
      }
    }
    /// <summary>Gets whether the "granted_ranks" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGrantedRanks {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "granted_ranks" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGrantedRanks() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TraitEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TraitEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (EntryId != other.EntryId) return false;
      if (PurchasedRanks != other.PurchasedRanks) return false;
      if (GrantedRanks != other.GrantedRanks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNodeId) hash ^= NodeId.GetHashCode();
      if (HasEntryId) hash ^= EntryId.GetHashCode();
      if (HasPurchasedRanks) hash ^= PurchasedRanks.GetHashCode();
      if (HasGrantedRanks) hash ^= GrantedRanks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNodeId) {
        output.WriteRawTag(8);
        output.WriteInt32(NodeId);
      }
      if (HasEntryId) {
        output.WriteRawTag(16);
        output.WriteInt32(EntryId);
      }
      if (HasPurchasedRanks) {
        output.WriteRawTag(24);
        output.WriteInt32(PurchasedRanks);
      }
      if (HasGrantedRanks) {
        output.WriteRawTag(32);
        output.WriteInt32(GrantedRanks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNodeId) {
        output.WriteRawTag(8);
        output.WriteInt32(NodeId);
      }
      if (HasEntryId) {
        output.WriteRawTag(16);
        output.WriteInt32(EntryId);
      }
      if (HasPurchasedRanks) {
        output.WriteRawTag(24);
        output.WriteInt32(PurchasedRanks);
      }
      if (HasGrantedRanks) {
        output.WriteRawTag(32);
        output.WriteInt32(GrantedRanks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNodeId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeId);
      }
      if (HasEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntryId);
      }
      if (HasPurchasedRanks) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PurchasedRanks);
      }
      if (HasGrantedRanks) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GrantedRanks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TraitEntry other) {
      if (other == null) {
        return;
      }
      if (other.HasNodeId) {
        NodeId = other.NodeId;
      }
      if (other.HasEntryId) {
        EntryId = other.EntryId;
      }
      if (other.HasPurchasedRanks) {
        PurchasedRanks = other.PurchasedRanks;
      }
      if (other.HasGrantedRanks) {
        GrantedRanks = other.GrantedRanks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NodeId = input.ReadInt32();
            break;
          }
          case 16: {
            EntryId = input.ReadInt32();
            break;
          }
          case 24: {
            PurchasedRanks = input.ReadInt32();
            break;
          }
          case 32: {
            GrantedRanks = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NodeId = input.ReadInt32();
            break;
          }
          case 16: {
            EntryId = input.ReadInt32();
            break;
          }
          case 24: {
            PurchasedRanks = input.ReadInt32();
            break;
          }
          case 32: {
            GrantedRanks = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TraitConfig : pb::IMessage<TraitConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TraitConfig> _parser = new pb::MessageParser<TraitConfig>(() => new TraitConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TraitConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraitConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraitConfig(TraitConfig other) : this() {
      _hasBits0 = other._hasBits0;
      configId_ = other.configId_;
      configType_ = other.configType_;
      entries_ = other.entries_.Clone();
      specId_ = other.specId_;
      combatFlags_ = other.combatFlags_;
      skillLineId_ = other.skillLineId_;
      configSystemId_ = other.configSystemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TraitConfig Clone() {
      return new TraitConfig(this);
    }

    /// <summary>Field number for the "config_id" field.</summary>
    public const int ConfigIdFieldNumber = 1;
    private readonly static int ConfigIdDefaultValue = 0;

    private int configId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConfigId {
      get { if ((_hasBits0 & 1) != 0) { return configId_; } else { return ConfigIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        configId_ = value;
      }
    }
    /// <summary>Gets whether the "config_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfigId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "config_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "config_type" field.</summary>
    public const int ConfigTypeFieldNumber = 2;
    private readonly static int ConfigTypeDefaultValue = 0;

    private int configType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConfigType {
      get { if ((_hasBits0 & 2) != 0) { return configType_; } else { return ConfigTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        configType_ = value;
      }
    }
    /// <summary>Gets whether the "config_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfigType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "config_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Blizzard.Telemetry.Wow.TraitEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Blizzard.Telemetry.Wow.TraitEntry.Parser);
    private readonly pbc::RepeatedField<global::Blizzard.Telemetry.Wow.TraitEntry> entries_ = new pbc::RepeatedField<global::Blizzard.Telemetry.Wow.TraitEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Blizzard.Telemetry.Wow.TraitEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "spec_id" field.</summary>
    public const int SpecIdFieldNumber = 4;
    private readonly static int SpecIdDefaultValue = 0;

    private int specId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpecId {
      get { if ((_hasBits0 & 4) != 0) { return specId_; } else { return SpecIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        specId_ = value;
      }
    }
    /// <summary>Gets whether the "spec_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "spec_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "combat_flags" field.</summary>
    public const int CombatFlagsFieldNumber = 5;
    private readonly static int CombatFlagsDefaultValue = 0;

    private int combatFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CombatFlags {
      get { if ((_hasBits0 & 8) != 0) { return combatFlags_; } else { return CombatFlagsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        combatFlags_ = value;
      }
    }
    /// <summary>Gets whether the "combat_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCombatFlags {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "combat_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCombatFlags() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "skill_line_id" field.</summary>
    public const int SkillLineIdFieldNumber = 6;
    private readonly static int SkillLineIdDefaultValue = 0;

    private int skillLineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SkillLineId {
      get { if ((_hasBits0 & 16) != 0) { return skillLineId_; } else { return SkillLineIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        skillLineId_ = value;
      }
    }
    /// <summary>Gets whether the "skill_line_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkillLineId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "skill_line_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkillLineId() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "config_system_id" field.</summary>
    public const int ConfigSystemIdFieldNumber = 7;
    private readonly static int ConfigSystemIdDefaultValue = 0;

    private int configSystemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConfigSystemId {
      get { if ((_hasBits0 & 32) != 0) { return configSystemId_; } else { return ConfigSystemIdDefaultValue; } }
      set {
        _hasBits0 |= 32;
        configSystemId_ = value;
      }
    }
    /// <summary>Gets whether the "config_system_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasConfigSystemId {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "config_system_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearConfigSystemId() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TraitConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TraitConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigId != other.ConfigId) return false;
      if (ConfigType != other.ConfigType) return false;
      if(!entries_.Equals(other.entries_)) return false;
      if (SpecId != other.SpecId) return false;
      if (CombatFlags != other.CombatFlags) return false;
      if (SkillLineId != other.SkillLineId) return false;
      if (ConfigSystemId != other.ConfigSystemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConfigId) hash ^= ConfigId.GetHashCode();
      if (HasConfigType) hash ^= ConfigType.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (HasSpecId) hash ^= SpecId.GetHashCode();
      if (HasCombatFlags) hash ^= CombatFlags.GetHashCode();
      if (HasSkillLineId) hash ^= SkillLineId.GetHashCode();
      if (HasConfigSystemId) hash ^= ConfigSystemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConfigId) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (HasConfigType) {
        output.WriteRawTag(16);
        output.WriteInt32(ConfigType);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (HasSpecId) {
        output.WriteRawTag(32);
        output.WriteInt32(SpecId);
      }
      if (HasCombatFlags) {
        output.WriteRawTag(40);
        output.WriteInt32(CombatFlags);
      }
      if (HasSkillLineId) {
        output.WriteRawTag(48);
        output.WriteInt32(SkillLineId);
      }
      if (HasConfigSystemId) {
        output.WriteRawTag(56);
        output.WriteInt32(ConfigSystemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConfigId) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigId);
      }
      if (HasConfigType) {
        output.WriteRawTag(16);
        output.WriteInt32(ConfigType);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (HasSpecId) {
        output.WriteRawTag(32);
        output.WriteInt32(SpecId);
      }
      if (HasCombatFlags) {
        output.WriteRawTag(40);
        output.WriteInt32(CombatFlags);
      }
      if (HasSkillLineId) {
        output.WriteRawTag(48);
        output.WriteInt32(SkillLineId);
      }
      if (HasConfigSystemId) {
        output.WriteRawTag(56);
        output.WriteInt32(ConfigSystemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasConfigId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (HasConfigType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigType);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (HasSpecId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpecId);
      }
      if (HasCombatFlags) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CombatFlags);
      }
      if (HasSkillLineId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SkillLineId);
      }
      if (HasConfigSystemId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigSystemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TraitConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasConfigId) {
        ConfigId = other.ConfigId;
      }
      if (other.HasConfigType) {
        ConfigType = other.ConfigType;
      }
      entries_.Add(other.entries_);
      if (other.HasSpecId) {
        SpecId = other.SpecId;
      }
      if (other.HasCombatFlags) {
        CombatFlags = other.CombatFlags;
      }
      if (other.HasSkillLineId) {
        SkillLineId = other.SkillLineId;
      }
      if (other.HasConfigSystemId) {
        ConfigSystemId = other.ConfigSystemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 16: {
            ConfigType = input.ReadInt32();
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 32: {
            SpecId = input.ReadInt32();
            break;
          }
          case 40: {
            CombatFlags = input.ReadInt32();
            break;
          }
          case 48: {
            SkillLineId = input.ReadInt32();
            break;
          }
          case 56: {
            ConfigSystemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConfigId = input.ReadInt32();
            break;
          }
          case 16: {
            ConfigType = input.ReadInt32();
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
          case 32: {
            SpecId = input.ReadInt32();
            break;
          }
          case 40: {
            CombatFlags = input.ReadInt32();
            break;
          }
          case 48: {
            SkillLineId = input.ReadInt32();
            break;
          }
          case 56: {
            ConfigSystemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NodeEntryDelta : pb::IMessage<NodeEntryDelta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeEntryDelta> _parser = new pb::MessageParser<NodeEntryDelta>(() => new NodeEntryDelta());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeEntryDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeEntryDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeEntryDelta(NodeEntryDelta other) : this() {
      _hasBits0 = other._hasBits0;
      nodeId_ = other.nodeId_;
      oldEntryId_ = other.oldEntryId_;
      newEntryId_ = other.newEntryId_;
      oldRank_ = other.oldRank_;
      newRank_ = other.newRank_;
      grantedRankDelta_ = other.grantedRankDelta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeEntryDelta Clone() {
      return new NodeEntryDelta(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private readonly static int NodeIdDefaultValue = 0;

    private int nodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NodeId {
      get { if ((_hasBits0 & 1) != 0) { return nodeId_; } else { return NodeIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        nodeId_ = value;
      }
    }
    /// <summary>Gets whether the "node_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNodeId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "node_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNodeId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "old_entry_id" field.</summary>
    public const int OldEntryIdFieldNumber = 2;
    private readonly static int OldEntryIdDefaultValue = 0;

    private int oldEntryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OldEntryId {
      get { if ((_hasBits0 & 2) != 0) { return oldEntryId_; } else { return OldEntryIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        oldEntryId_ = value;
      }
    }
    /// <summary>Gets whether the "old_entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOldEntryId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "old_entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOldEntryId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "new_entry_id" field.</summary>
    public const int NewEntryIdFieldNumber = 3;
    private readonly static int NewEntryIdDefaultValue = 0;

    private int newEntryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NewEntryId {
      get { if ((_hasBits0 & 4) != 0) { return newEntryId_; } else { return NewEntryIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        newEntryId_ = value;
      }
    }
    /// <summary>Gets whether the "new_entry_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewEntryId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "new_entry_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewEntryId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "old_rank" field.</summary>
    public const int OldRankFieldNumber = 4;
    private readonly static int OldRankDefaultValue = 0;

    private int oldRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OldRank {
      get { if ((_hasBits0 & 8) != 0) { return oldRank_; } else { return OldRankDefaultValue; } }
      set {
        _hasBits0 |= 8;
        oldRank_ = value;
      }
    }
    /// <summary>Gets whether the "old_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOldRank {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "old_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOldRank() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "new_rank" field.</summary>
    public const int NewRankFieldNumber = 5;
    private readonly static int NewRankDefaultValue = 0;

    private int newRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NewRank {
      get { if ((_hasBits0 & 16) != 0) { return newRank_; } else { return NewRankDefaultValue; } }
      set {
        _hasBits0 |= 16;
        newRank_ = value;
      }
    }
    /// <summary>Gets whether the "new_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewRank {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "new_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewRank() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "granted_rank_delta" field.</summary>
    public const int GrantedRankDeltaFieldNumber = 6;
    private readonly static int GrantedRankDeltaDefaultValue = 0;

    private int grantedRankDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GrantedRankDelta {
      get { if ((_hasBits0 & 32) != 0) { return grantedRankDelta_; } else { return GrantedRankDeltaDefaultValue; } }
      set {
        _hasBits0 |= 32;
        grantedRankDelta_ = value;
      }
    }
    /// <summary>Gets whether the "granted_rank_delta" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGrantedRankDelta {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "granted_rank_delta" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGrantedRankDelta() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeEntryDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeEntryDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (OldEntryId != other.OldEntryId) return false;
      if (NewEntryId != other.NewEntryId) return false;
      if (OldRank != other.OldRank) return false;
      if (NewRank != other.NewRank) return false;
      if (GrantedRankDelta != other.GrantedRankDelta) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNodeId) hash ^= NodeId.GetHashCode();
      if (HasOldEntryId) hash ^= OldEntryId.GetHashCode();
      if (HasNewEntryId) hash ^= NewEntryId.GetHashCode();
      if (HasOldRank) hash ^= OldRank.GetHashCode();
      if (HasNewRank) hash ^= NewRank.GetHashCode();
      if (HasGrantedRankDelta) hash ^= GrantedRankDelta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNodeId) {
        output.WriteRawTag(8);
        output.WriteInt32(NodeId);
      }
      if (HasOldEntryId) {
        output.WriteRawTag(16);
        output.WriteInt32(OldEntryId);
      }
      if (HasNewEntryId) {
        output.WriteRawTag(24);
        output.WriteInt32(NewEntryId);
      }
      if (HasOldRank) {
        output.WriteRawTag(32);
        output.WriteInt32(OldRank);
      }
      if (HasNewRank) {
        output.WriteRawTag(40);
        output.WriteInt32(NewRank);
      }
      if (HasGrantedRankDelta) {
        output.WriteRawTag(48);
        output.WriteInt32(GrantedRankDelta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNodeId) {
        output.WriteRawTag(8);
        output.WriteInt32(NodeId);
      }
      if (HasOldEntryId) {
        output.WriteRawTag(16);
        output.WriteInt32(OldEntryId);
      }
      if (HasNewEntryId) {
        output.WriteRawTag(24);
        output.WriteInt32(NewEntryId);
      }
      if (HasOldRank) {
        output.WriteRawTag(32);
        output.WriteInt32(OldRank);
      }
      if (HasNewRank) {
        output.WriteRawTag(40);
        output.WriteInt32(NewRank);
      }
      if (HasGrantedRankDelta) {
        output.WriteRawTag(48);
        output.WriteInt32(GrantedRankDelta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNodeId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeId);
      }
      if (HasOldEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldEntryId);
      }
      if (HasNewEntryId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewEntryId);
      }
      if (HasOldRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldRank);
      }
      if (HasNewRank) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewRank);
      }
      if (HasGrantedRankDelta) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GrantedRankDelta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeEntryDelta other) {
      if (other == null) {
        return;
      }
      if (other.HasNodeId) {
        NodeId = other.NodeId;
      }
      if (other.HasOldEntryId) {
        OldEntryId = other.OldEntryId;
      }
      if (other.HasNewEntryId) {
        NewEntryId = other.NewEntryId;
      }
      if (other.HasOldRank) {
        OldRank = other.OldRank;
      }
      if (other.HasNewRank) {
        NewRank = other.NewRank;
      }
      if (other.HasGrantedRankDelta) {
        GrantedRankDelta = other.GrantedRankDelta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NodeId = input.ReadInt32();
            break;
          }
          case 16: {
            OldEntryId = input.ReadInt32();
            break;
          }
          case 24: {
            NewEntryId = input.ReadInt32();
            break;
          }
          case 32: {
            OldRank = input.ReadInt32();
            break;
          }
          case 40: {
            NewRank = input.ReadInt32();
            break;
          }
          case 48: {
            GrantedRankDelta = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NodeId = input.ReadInt32();
            break;
          }
          case 16: {
            OldEntryId = input.ReadInt32();
            break;
          }
          case 24: {
            NewEntryId = input.ReadInt32();
            break;
          }
          case 32: {
            OldRank = input.ReadInt32();
            break;
          }
          case 40: {
            NewRank = input.ReadInt32();
            break;
          }
          case 48: {
            GrantedRankDelta = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpellDamageStats : pb::IMessage<SpellDamageStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpellDamageStats> _parser = new pb::MessageParser<SpellDamageStats>(() => new SpellDamageStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpellDamageStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.Wow.TelemetrySharedImportsReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellDamageStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellDamageStats(SpellDamageStats other) : this() {
      _hasBits0 = other._hasBits0;
      spellId_ = other.spellId_;
      numberOfCasts_ = other.numberOfCasts_;
      totalDamage_ = other.totalDamage_;
      maxDamage_ = other.maxDamage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpellDamageStats Clone() {
      return new SpellDamageStats(this);
    }

    /// <summary>Field number for the "spell_id" field.</summary>
    public const int SpellIdFieldNumber = 1;
    private readonly static uint SpellIdDefaultValue = 0;

    private uint spellId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpellId {
      get { if ((_hasBits0 & 1) != 0) { return spellId_; } else { return SpellIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        spellId_ = value;
      }
    }
    /// <summary>Gets whether the "spell_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpellId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "spell_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpellId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "number_of_casts" field.</summary>
    public const int NumberOfCastsFieldNumber = 2;
    private readonly static uint NumberOfCastsDefaultValue = 0;

    private uint numberOfCasts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumberOfCasts {
      get { if ((_hasBits0 & 2) != 0) { return numberOfCasts_; } else { return NumberOfCastsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        numberOfCasts_ = value;
      }
    }
    /// <summary>Gets whether the "number_of_casts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumberOfCasts {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "number_of_casts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumberOfCasts() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "total_damage" field.</summary>
    public const int TotalDamageFieldNumber = 3;
    private readonly static ulong TotalDamageDefaultValue = 0UL;

    private ulong totalDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TotalDamage {
      get { if ((_hasBits0 & 4) != 0) { return totalDamage_; } else { return TotalDamageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalDamage_ = value;
      }
    }
    /// <summary>Gets whether the "total_damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalDamage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalDamage() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "max_damage" field.</summary>
    public const int MaxDamageFieldNumber = 4;
    private readonly static ulong MaxDamageDefaultValue = 0UL;

    private ulong maxDamage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MaxDamage {
      get { if ((_hasBits0 & 8) != 0) { return maxDamage_; } else { return MaxDamageDefaultValue; } }
      set {
        _hasBits0 |= 8;
        maxDamage_ = value;
      }
    }
    /// <summary>Gets whether the "max_damage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxDamage {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "max_damage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxDamage() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpellDamageStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpellDamageStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpellId != other.SpellId) return false;
      if (NumberOfCasts != other.NumberOfCasts) return false;
      if (TotalDamage != other.TotalDamage) return false;
      if (MaxDamage != other.MaxDamage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSpellId) hash ^= SpellId.GetHashCode();
      if (HasNumberOfCasts) hash ^= NumberOfCasts.GetHashCode();
      if (HasTotalDamage) hash ^= TotalDamage.GetHashCode();
      if (HasMaxDamage) hash ^= MaxDamage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSpellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (HasNumberOfCasts) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumberOfCasts);
      }
      if (HasTotalDamage) {
        output.WriteRawTag(24);
        output.WriteUInt64(TotalDamage);
      }
      if (HasMaxDamage) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxDamage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSpellId) {
        output.WriteRawTag(8);
        output.WriteUInt32(SpellId);
      }
      if (HasNumberOfCasts) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumberOfCasts);
      }
      if (HasTotalDamage) {
        output.WriteRawTag(24);
        output.WriteUInt64(TotalDamage);
      }
      if (HasMaxDamage) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxDamage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSpellId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpellId);
      }
      if (HasNumberOfCasts) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumberOfCasts);
      }
      if (HasTotalDamage) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalDamage);
      }
      if (HasMaxDamage) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxDamage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpellDamageStats other) {
      if (other == null) {
        return;
      }
      if (other.HasSpellId) {
        SpellId = other.SpellId;
      }
      if (other.HasNumberOfCasts) {
        NumberOfCasts = other.NumberOfCasts;
      }
      if (other.HasTotalDamage) {
        TotalDamage = other.TotalDamage;
      }
      if (other.HasMaxDamage) {
        MaxDamage = other.MaxDamage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            NumberOfCasts = input.ReadUInt32();
            break;
          }
          case 24: {
            TotalDamage = input.ReadUInt64();
            break;
          }
          case 32: {
            MaxDamage = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SpellId = input.ReadUInt32();
            break;
          }
          case 16: {
            NumberOfCasts = input.ReadUInt32();
            break;
          }
          case 24: {
            TotalDamage = input.ReadUInt64();
            break;
          }
          case 32: {
            MaxDamage = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
