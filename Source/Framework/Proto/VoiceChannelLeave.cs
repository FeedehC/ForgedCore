// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: voice_channel_leave.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Blizzard.Telemetry.VoiceClient {

  /// <summary>Holder for reflection information generated from voice_channel_leave.proto</summary>
  public static partial class VoiceChannelLeaveReflection {

    #region Descriptor
    /// <summary>File descriptor for voice_channel_leave.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VoiceChannelLeaveReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chl2b2ljZV9jaGFubmVsX2xlYXZlLnByb3RvEh5CbGl6emFyZC5UZWxlbWV0",
            "cnkuVm9pY2VDbGllbnQiigEKDENoYW5uZWxMZWF2ZRITCgtjaGFubmVsX3Vy",
            "aRgBIAEoCRISCgptZW1iZXJfdXJpGAIgASgJEg4KBnN0YXR1cxgDIAEoDRIT",
            "CgtkdXJhdGlvbl9tcxgEIAEoBBIWCg5zcGVha2luZ19jb3VudBgFIAEoDRIU",
            "Cgx1cGRhdGVfY291bnQYBiABKA0="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Blizzard.Telemetry.VoiceClient.ChannelLeave), global::Blizzard.Telemetry.VoiceClient.ChannelLeave.Parser, new[]{ "ChannelUri", "MemberUri", "Status", "DurationMs", "SpeakingCount", "UpdateCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChannelLeave : pb::IMessage<ChannelLeave>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChannelLeave> _parser = new pb::MessageParser<ChannelLeave>(() => new ChannelLeave());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChannelLeave> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Blizzard.Telemetry.VoiceClient.VoiceChannelLeaveReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelLeave() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelLeave(ChannelLeave other) : this() {
      _hasBits0 = other._hasBits0;
      channelUri_ = other.channelUri_;
      memberUri_ = other.memberUri_;
      status_ = other.status_;
      durationMs_ = other.durationMs_;
      speakingCount_ = other.speakingCount_;
      updateCount_ = other.updateCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelLeave Clone() {
      return new ChannelLeave(this);
    }

    /// <summary>Field number for the "channel_uri" field.</summary>
    public const int ChannelUriFieldNumber = 1;
    private readonly static string ChannelUriDefaultValue = "";

    private string channelUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChannelUri {
      get { return channelUri_ ?? ChannelUriDefaultValue; }
      set {
        channelUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel_uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelUri {
      get { return channelUri_ != null; }
    }
    /// <summary>Clears the value of the "channel_uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelUri() {
      channelUri_ = null;
    }

    /// <summary>Field number for the "member_uri" field.</summary>
    public const int MemberUriFieldNumber = 2;
    private readonly static string MemberUriDefaultValue = "";

    private string memberUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MemberUri {
      get { return memberUri_ ?? MemberUriDefaultValue; }
      set {
        memberUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "member_uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMemberUri {
      get { return memberUri_ != null; }
    }
    /// <summary>Clears the value of the "member_uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMemberUri() {
      memberUri_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private readonly static uint StatusDefaultValue = 0;

    private uint status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Status {
      get { if ((_hasBits0 & 1) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 4;
    private readonly static ulong DurationMsDefaultValue = 0UL;

    private ulong durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong DurationMs {
      get { if ((_hasBits0 & 2) != 0) { return durationMs_; } else { return DurationMsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        durationMs_ = value;
      }
    }
    /// <summary>Gets whether the "duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDurationMs {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDurationMs() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "speaking_count" field.</summary>
    public const int SpeakingCountFieldNumber = 5;
    private readonly static uint SpeakingCountDefaultValue = 0;

    private uint speakingCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SpeakingCount {
      get { if ((_hasBits0 & 4) != 0) { return speakingCount_; } else { return SpeakingCountDefaultValue; } }
      set {
        _hasBits0 |= 4;
        speakingCount_ = value;
      }
    }
    /// <summary>Gets whether the "speaking_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpeakingCount {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "speaking_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeakingCount() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "update_count" field.</summary>
    public const int UpdateCountFieldNumber = 6;
    private readonly static uint UpdateCountDefaultValue = 0;

    private uint updateCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UpdateCount {
      get { if ((_hasBits0 & 8) != 0) { return updateCount_; } else { return UpdateCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        updateCount_ = value;
      }
    }
    /// <summary>Gets whether the "update_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpdateCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "update_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpdateCount() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChannelLeave);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChannelLeave other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelUri != other.ChannelUri) return false;
      if (MemberUri != other.MemberUri) return false;
      if (Status != other.Status) return false;
      if (DurationMs != other.DurationMs) return false;
      if (SpeakingCount != other.SpeakingCount) return false;
      if (UpdateCount != other.UpdateCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannelUri) hash ^= ChannelUri.GetHashCode();
      if (HasMemberUri) hash ^= MemberUri.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasDurationMs) hash ^= DurationMs.GetHashCode();
      if (HasSpeakingCount) hash ^= SpeakingCount.GetHashCode();
      if (HasUpdateCount) hash ^= UpdateCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannelUri) {
        output.WriteRawTag(10);
        output.WriteString(ChannelUri);
      }
      if (HasMemberUri) {
        output.WriteRawTag(18);
        output.WriteString(MemberUri);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteUInt32(Status);
      }
      if (HasDurationMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(DurationMs);
      }
      if (HasSpeakingCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(SpeakingCount);
      }
      if (HasUpdateCount) {
        output.WriteRawTag(48);
        output.WriteUInt32(UpdateCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannelUri) {
        output.WriteRawTag(10);
        output.WriteString(ChannelUri);
      }
      if (HasMemberUri) {
        output.WriteRawTag(18);
        output.WriteString(MemberUri);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteUInt32(Status);
      }
      if (HasDurationMs) {
        output.WriteRawTag(32);
        output.WriteUInt64(DurationMs);
      }
      if (HasSpeakingCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(SpeakingCount);
      }
      if (HasUpdateCount) {
        output.WriteRawTag(48);
        output.WriteUInt32(UpdateCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannelUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelUri);
      }
      if (HasMemberUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberUri);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Status);
      }
      if (HasDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DurationMs);
      }
      if (HasSpeakingCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpeakingCount);
      }
      if (HasUpdateCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpdateCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChannelLeave other) {
      if (other == null) {
        return;
      }
      if (other.HasChannelUri) {
        ChannelUri = other.ChannelUri;
      }
      if (other.HasMemberUri) {
        MemberUri = other.MemberUri;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasDurationMs) {
        DurationMs = other.DurationMs;
      }
      if (other.HasSpeakingCount) {
        SpeakingCount = other.SpeakingCount;
      }
      if (other.HasUpdateCount) {
        UpdateCount = other.UpdateCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChannelUri = input.ReadString();
            break;
          }
          case 18: {
            MemberUri = input.ReadString();
            break;
          }
          case 24: {
            Status = input.ReadUInt32();
            break;
          }
          case 32: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 40: {
            SpeakingCount = input.ReadUInt32();
            break;
          }
          case 48: {
            UpdateCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ChannelUri = input.ReadString();
            break;
          }
          case 18: {
            MemberUri = input.ReadString();
            break;
          }
          case 24: {
            Status = input.ReadUInt32();
            break;
          }
          case 32: {
            DurationMs = input.ReadUInt64();
            break;
          }
          case 40: {
            SpeakingCount = input.ReadUInt32();
            break;
          }
          case 48: {
            UpdateCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
