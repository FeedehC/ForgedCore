import "telemetry_extensions.proto";

package Blizzard.Telemetry.Wow;

message CharacterIdentity {
	optional uint64 character_id = 1;
	optional uint32 cfg_realm_id = 2;
	optional uint64 bnet_account_id = 3;
	optional uint64 game_account_id = 4;
	optional int32 region_id = 5;
	optional uint64 community_id = 6;
}

message RealmContext {
	optional .Blizzard.Telemetry.Wow.RealmInfo native_realm = 1;
	optional .Blizzard.Telemetry.Wow.RealmInfo virtual_realm = 2;
}

message RealmInfo {
	optional uint32 realm_region = 1;
	optional uint32 realm_site = 2;
	optional uint32 realm_id = 3;
	optional uint32 cfg_realm_id = 4;
	optional string realm_name = 5;
}

message JamServerSpec {
	optional .Blizzard.Telemetry.Wow.RealmInfo realm_info = 1;
	optional uint32 server_id = 2;
	optional uint32 server_type = 3;
}

message MapInfo {
	optional uint32 map_id = 1;
	optional uint32 area_share_id = 2;
	optional uint64 instance_id = 3;
	optional uint64 simulation_id = 4;
}

message WorldPortLoc {
	optional uint32 map_id = 1;
	optional float x = 2;
	optional float y = 3;
	optional float z = 4;
	optional uint32 area_table_id = 5;
	optional uint32 sub_area_id = 6;
	optional uint32 wmo_group_id = 7;
	optional float facing = 8;
}

message BindLocation {
	optional uint32 map_id = 1;
	optional uint32 area_id = 2;
	optional float x = 3;
	optional float y = 4;
	optional float z = 5;
}

message AccountInfo {
	optional uint64 bnet_account_id = 1;
	repeated uint64 game_account_id = 2;
	optional uint32 region = 3;
}

message PartyInfo {
	optional uint32 cfg_realm_id = 1;
	optional uint64 party_id = 2;
	optional bool is_leader = 3;
	optional bool is_cross_faction = 4;
}

message GuildInfo {
	optional uint32 cfg_realm_id = 1;
	optional uint64 guild_id = 2;
	optional uint32 region = 3;
}

message Cost {
	enum ResourceType {
		ITEM = 0;
		CURRENCY = 1;
	}

	optional .Blizzard.Telemetry.Wow.Cost.ResourceType resourcetype = 1 [default = ITEM];
	optional uint32 resource_id = 2;
	optional uint32 resource_count = 3;
}

message InstanceGUID {
	optional uint32 proxy_realm_id = 1;
	optional uint64 instance_id = 2;
}

message UserRouterGUID {
	optional uint32 realm_rec_id = 1;
	optional uint64 id = 2;
}

message GameObjectGUID {
	optional uint32 object_id = 1;
	optional uint32 cfg_realm_id = 2;
	optional uint64 instance_id = 3;
}

message ScenarioGUID {
	optional uint32 scenario_id = 1;
	optional uint32 map_id = 2;
	optional uint32 realm_id = 3;
	optional uint32 server_id = 4;
	optional uint64 unique_id = 5;
}

message WorldTransactionGUID {
	optional uint32 transaction_type = 1;
	optional uint32 realm_rec_id = 2;
	optional int32 map_id = 3;
	optional int32 server_id = 4;
	optional uint64 transaction_id = 5;
}

message FileLocation {
	optional string source_name = 1;
	optional string event_name = 2;
	optional string file_name = 3;
	optional int32 line_number = 4;
}

message Talent {
	optional uint32 talent_id = 1;
	optional uint32 rank = 2;
}

message Glyph {
	optional uint32 glyph_id = 1;
	optional int32 spell_id = 2;
}

message ItemEnchantment {
	optional uint32 slot = 1;
	optional uint32 id = 2;
}

message ItemSocketedGem {
	optional uint32 socket = 1;
	optional uint32 item_id = 2;
	optional uint32 context = 3;
	repeated int32 bonus_list_ids = 4;
}

message Loot {
	optional uint64 loot_id = 1;
}

message MentorshipStatus {
	optional bool is_guide = 1;
	optional bool is_newcomer = 2;
}

message Stat {
	optional uint32 stat_id = 1;
	optional uint32 stat_value = 2;
}

message CurrencyData {
	optional uint32 currency_type = 1;
	optional uint32 quantity = 2;
}

message QuestLogData {
	optional uint32 quest_id = 1;
	optional uint64 accept_timestamp = 2;
}

message EarnedAchievement {
	optional int32 achievement_id = 1;
	optional uint64 timestamp = 2;
}

message ItemLite {
	optional uint32 c_id = 1;
	optional uint32 c_quantity = 2;
}

message CurrencyLite {
	optional uint32 c_id = 1;
	optional uint32 c_quantity = 2;
}

message TraitEntry {
	optional int32 node_id = 1;
	optional int32 entry_id = 2;
	optional int32 purchased_ranks = 3;
	optional int32 granted_ranks = 4;
}

message TraitConfig {
	optional int32 config_id = 1;
	optional int32 config_type = 2;
	repeated .Blizzard.Telemetry.Wow.TraitEntry entries = 3;
	optional int32 spec_id = 4;
	optional int32 combat_flags = 5;
	optional int32 skill_line_id = 6;
	optional int32 config_system_id = 7;
}

message NodeEntryDelta {
	optional int32 node_id = 1;
	optional int32 old_entry_id = 2;
	optional int32 new_entry_id = 3;
	optional int32 old_rank = 4;
	optional int32 new_rank = 5;
	optional int32 granted_rank_delta = 6;
}

message SpellDamageStats {
	optional uint32 spell_id = 1;
	optional uint32 number_of_casts = 2;
	optional uint64 total_damage = 3;
	optional uint64 max_damage = 4;
}

